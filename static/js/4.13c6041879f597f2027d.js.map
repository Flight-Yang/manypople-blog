{"version":3,"sources":["webpack:///src/pages/Detail/template.vue","webpack:///./src/pages/Detail/template.vue?7aa6","webpack:///./src/pages/Detail/template.vue"],"names":["Detail_template","render","_h","this","$createElement","_c","_self","attrs","id","staticClass","src","alt","_v","to","_m","staticRenderFns","_vm","href","target","staticStyle","text-align","Component","__webpack_require__","normalizeComponent","data","msg","ssrContext","__webpack_exports__"],"mappings":"4HA82BA,IC32BeA,GADEC,OAFjB,WAA0B,IAAaC,EAAbC,KAAaC,eAA0BC,EAAvCF,KAAuCG,MAAAD,IAAAH,EAAwB,OAAAG,EAAA,OAAiBE,OAAOC,GAAA,YAAeH,EAAA,WAAgBI,YAAA,cAAwBJ,EAAA,OAAYI,YAAA,SAAAF,OAA4BG,IAAA,oDAAAC,IAAA,MAAtLR,KAA0PS,GAAA,KAAAP,EAAA,MAA1PF,KAA0PS,GAAA,aAA1PT,KAA0PS,GAAA,KAAAP,EAAA,KAAAA,EAAA,eAAiFE,OAAOM,GAAA,WAAlVV,KAAgWS,GAAA,QAAhWT,KAAgWS,GAAA,kCAAhWT,KAAgWS,GAAA,KAAhWT,KAAgWW,GAAA,MAEzWC,iBADjB,WAAoC,IAAAC,EAAAb,KAAaD,EAAAc,EAAAZ,eAA0BC,EAAAW,EAAAV,MAAAD,IAAAH,EAAwB,OAAAG,EAAA,WAAqBI,YAAA,YAAsBJ,EAAA,MAAWE,OAAOC,GAAA,kBAAqBQ,EAAAJ,GAAA,kBAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,oEAAAP,EAAA,KAAkIE,OAAOU,KAAA,0DAAAC,OAAA,YAAoFF,EAAAJ,GAAA,aAAAI,EAAAJ,GAAA,2EAAAI,EAAAJ,GAAA,KAAAP,EAAA,cAAAA,EAAA,KAAAA,EAAA,KAAqJE,OAAOU,KAAA,2DAAAC,OAAA,YAAqFF,EAAAJ,GAAA,QAAAI,EAAAJ,GAAA,QAAAP,EAAA,KAAwCE,OAAOU,KAAA,4DAAAC,OAAA,YAAsFF,EAAAJ,GAAA,iBAAAI,EAAAJ,GAAA,YAAAP,EAAA,KAAqDE,OAAOU,KAAA,sBAAAC,OAAA,YAAgDF,EAAAJ,GAAA,SAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAsCE,OAAOU,KAAA,8CAAAC,OAAA,YAAwEF,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAyDE,OAAOC,GAAA,QAAWQ,EAAAJ,GAAA,QAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,8UAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,gDAAAP,EAAA,KAA6cE,OAAOU,KAAA,+DAAAC,OAAA,YAAyFF,EAAAJ,GAAA,mBAAAI,EAAAJ,GAAA,oFAAAP,EAAA,KAA+HE,OAAOU,KAAA,0DAAAC,OAAA,YAAoFF,EAAAJ,GAAA,iBAAAI,EAAAJ,GAAA,oJAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,6EAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAkTE,OAAOC,GAAA,mBAAsBQ,EAAAJ,GAAA,mBAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,sBAAAP,EAAA,QAAAW,EAAAJ,GAAA,kBAAAI,EAAAJ,GAAA,mBAAAP,EAAA,QAAAW,EAAAJ,GAAA,2BAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAAAW,EAAAJ,GAAA,wBAAAI,EAAAJ,GAAA,gBAAAP,EAAA,QAAAW,EAAAJ,GAAA,iBAAAI,EAAAJ,GAAA,gBAAAP,EAAA,QAAAW,EAAAJ,GAAA,cAAAI,EAAAJ,GAAA,+KAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,oLAAAI,EAAAJ,GAAA,KAAAP,EAAA,cAAAA,EAAA,KAAAW,EAAAJ,GAAA,gBAAAP,EAAA,KAAwyBE,OAAOU,KAAA,oCAAAC,OAAA,YAA8DF,EAAAJ,GAAA,aAAAI,EAAAJ,GAAA,8CAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAgGE,OAAOC,GAAA,WAAcQ,EAAAJ,GAAA,WAAAI,EAAAJ,GAAA,KAAAP,EAAA,SAAAA,EAAA,SAAAA,EAAA,MAAAA,EAAA,MAA0Ec,aAAaC,aAAA,YAAuBJ,EAAAJ,GAAA,YAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAA0Cc,aAAaC,aAAA,YAAuBJ,EAAAJ,GAAA,WAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAyCc,aAAaC,aAAA,YAAuBJ,EAAAJ,GAAA,aAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAA2Cc,aAAaC,aAAA,YAAuBJ,EAAAJ,GAAA,QAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAsCc,aAAaC,aAAA,YAAuBJ,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAwCc,aAAaC,aAAA,YAAuBJ,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,KAAAP,EAAA,SAAAA,EAAA,MAAAA,EAAA,MAAmEc,aAAaC,aAAA,YAAuBJ,EAAAJ,GAAA,QAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAsCc,aAAaC,aAAA,YAAuBJ,EAAAJ,GAAA,QAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAsCc,aAAaC,aAAA,YAAuBJ,EAAAJ,GAAA,QAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAsCc,aAAaC,aAAA,YAAuBJ,EAAAJ,GAAA,SAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAuCc,aAAaC,aAAA,YAAuBJ,EAAAJ,GAAA,QAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAsCc,aAAaC,aAAA,YAAuBJ,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAA8CE,OAAOC,GAAA,aAAgBQ,EAAAJ,GAAA,cAAAI,EAAAJ,GAAA,KAAAP,EAAA,SAAAA,EAAA,SAAAA,EAAA,MAAAA,EAAA,MAA6Ec,aAAaC,aAAA,YAAuBJ,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAA8Cc,aAAaC,aAAA,YAAuBJ,EAAAJ,GAAA,kBAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAgDc,aAAaC,aAAA,YAAuBJ,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAA8Cc,aAAaC,aAAA,YAAuBJ,EAAAJ,GAAA,aAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAA2Cc,aAAaC,aAAA,YAAuBJ,EAAAJ,GAAA,oBAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAkDc,aAAaC,aAAA,YAAuBJ,EAAAJ,GAAA,yBAAAI,EAAAJ,GAAA,KAAAP,EAAA,SAAAA,EAAA,MAAAA,EAAA,MAA4Ec,aAAaC,aAAA,YAAuBJ,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAwCc,aAAaC,aAAA,YAAuBJ,EAAAJ,GAAA,QAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAsCc,aAAaC,aAAA,YAAuBJ,EAAAJ,GAAA,QAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAsCc,aAAaC,aAAA,YAAuBJ,EAAAJ,GAAA,QAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAsCc,aAAaC,aAAA,YAAuBJ,EAAAJ,GAAA,QAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAsCc,aAAaC,aAAA,YAAuBJ,EAAAJ,GAAA,cAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,2FAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,uCAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAoOE,OAAOC,GAAA,UAAaQ,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,mGAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAsKE,OAAOC,GAAA,oBAAuBQ,EAAAJ,GAAA,oBAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,QAAAP,EAAA,QAAAW,EAAAJ,GAAA,mBAAAI,EAAAJ,GAAA,wCAAAP,EAAA,QAAAW,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,kCAAAI,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAgQI,YAAA,cAAwBJ,EAAA,QAAaI,YAAA,aAAuBO,EAAAJ,GAAA,KAAAP,EAAA,QAAyBI,YAAA,cAAwBO,EAAAJ,GAAA,SAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAAyCI,YAAA,cAAwBO,EAAAJ,GAAA,WAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAA2CI,YAAA,gBAA0BO,EAAAJ,GAAA,iBAAAI,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,QAAAP,EAAA,QAAoEI,YAAA,aAAuBO,EAAAJ,GAAA,KAAAP,EAAA,QAAyBI,YAAA,cAAwBO,EAAAJ,GAAA,SAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAAyCI,YAAA,cAAwBO,EAAAJ,GAAA,WAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAA2CI,YAAA,gBAA0BO,EAAAJ,GAAA,mBAAAI,EAAAJ,GAAA,OAAAP,EAAA,QAAuDI,YAAA,aAAuBO,EAAAJ,GAAA,MAAAP,EAAA,QAA0BI,YAAA,cAAwBO,EAAAJ,GAAA,SAAAI,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,QAAAP,EAAA,QAA0DI,YAAA,aAAuBO,EAAAJ,GAAA,KAAAP,EAAA,QAAyBI,YAAA,cAAwBO,EAAAJ,GAAA,SAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAAyCI,YAAA,cAAwBO,EAAAJ,GAAA,WAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAA2CI,YAAA,gBAA0BO,EAAAJ,GAAA,mBAAAI,EAAAJ,GAAA,OAAAP,EAAA,QAAuDI,YAAA,aAAuBO,EAAAJ,GAAA,MAAAP,EAAA,QAA0BI,YAAA,cAAwBO,EAAAJ,GAAA,SAAAI,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,QAAAP,EAAA,QAA0DI,YAAA,aAAuBO,EAAAJ,GAAA,KAAAP,EAAA,QAAyBI,YAAA,cAAwBO,EAAAJ,GAAA,SAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAAyCI,YAAA,cAAwBO,EAAAJ,GAAA,WAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAA2CI,YAAA,gBAA0BO,EAAAJ,GAAA,mBAAAI,EAAAJ,GAAA,OAAAP,EAAA,QAAuDI,YAAA,aAAuBO,EAAAJ,GAAA,MAAAP,EAAA,QAA0BI,YAAA,cAAwBO,EAAAJ,GAAA,SAAAI,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,MAAAP,EAAA,QAAwDI,YAAA,aAAuBO,EAAAJ,GAAA,MAAAP,EAAA,QAA0BI,YAAA,cAAwBO,EAAAJ,GAAA,SAAAI,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAsEE,OAAOC,GAAA,eAAkBQ,EAAAJ,GAAA,eAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,0BAAAP,EAAA,QAAAW,EAAAJ,GAAA,WAAAI,EAAAJ,GAAA,sBAAAP,EAAA,QAAAW,EAAAJ,GAAA,eAAAI,EAAAJ,GAAA,SAAAI,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAyNI,YAAA,cAAwBJ,EAAA,QAAaI,YAAA,aAAuBO,EAAAJ,GAAA,KAAAP,EAAA,QAAyBI,YAAA,cAAwBO,EAAAJ,GAAA,SAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAAyCI,YAAA,cAAwBO,EAAAJ,GAAA,WAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAA2CI,YAAA,gBAA0BO,EAAAJ,GAAA,iBAAAI,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,QAAAP,EAAA,QAAoEI,YAAA,aAAuBO,EAAAJ,GAAA,KAAAP,EAAA,QAAyBI,YAAA,cAAwBO,EAAAJ,GAAA,SAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAAyCI,YAAA,cAAwBO,EAAAJ,GAAA,WAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAA2CI,YAAA,gBAA0BO,EAAAJ,GAAA,YAAAI,EAAAJ,GAAA,OAAAP,EAAA,QAAgDI,YAAA,aAAuBO,EAAAJ,GAAA,MAAAP,EAAA,QAA0BI,YAAA,cAAwBO,EAAAJ,GAAA,SAAAI,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,QAAAP,EAAA,QAA0DI,YAAA,aAAuBO,EAAAJ,GAAA,KAAAP,EAAA,QAAyBI,YAAA,cAAwBO,EAAAJ,GAAA,SAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAAyCI,YAAA,cAAwBO,EAAAJ,GAAA,WAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAA2CI,YAAA,gBAA0BO,EAAAJ,GAAA,YAAAI,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,UAAAP,EAAA,QAAiEI,YAAA,aAAuBO,EAAAJ,GAAA,KAAAP,EAAA,QAAyBI,YAAA,cAAwBO,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAAuCI,YAAA,cAAwBO,EAAAJ,GAAA,WAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAA2CI,YAAA,gBAA0BO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,OAAAP,EAAA,QAAoDI,YAAA,aAAuBO,EAAAJ,GAAA,MAAAP,EAAA,QAA0BI,YAAA,cAAwBO,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,QAAAP,EAAA,QAAwDI,YAAA,aAAuBO,EAAAJ,GAAA,MAAAP,EAAA,QAA0BI,YAAA,cAAwBO,EAAAJ,GAAA,SAAAI,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,QAAAP,EAAA,QAA0DI,YAAA,aAAuBO,EAAAJ,GAAA,KAAAP,EAAA,QAAyBI,YAAA,cAAwBO,EAAAJ,GAAA,SAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAAyCI,YAAA,cAAwBO,EAAAJ,GAAA,WAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAA2CI,YAAA,gBAA0BO,EAAAJ,GAAA,YAAAI,EAAAJ,GAAA,OAAAP,EAAA,QAAgDI,YAAA,aAAuBO,EAAAJ,GAAA,MAAAP,EAAA,QAA0BI,YAAA,cAAwBO,EAAAJ,GAAA,SAAAI,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,MAAAP,EAAA,QAAwDI,YAAA,aAAuBO,EAAAJ,GAAA,MAAAP,EAAA,QAA0BI,YAAA,cAAwBO,EAAAJ,GAAA,SAAAI,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAsEE,OAAOC,GAAA,eAAkBQ,EAAAJ,GAAA,eAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,wGAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAA,EAAA,OAAyLE,OAAOG,IAAA,uDAAAC,IAAA,QAAuEK,EAAAJ,GAAA,KAAAP,EAAA,MAAyBE,OAAOC,GAAA,gBAAmBQ,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,0DAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAA,EAAA,OAA4IE,OAAOG,IAAA,uDAAAC,IAAA,QAAuEK,EAAAJ,GAAA,KAAAP,EAAA,MAAyBE,OAAOC,GAAA,eAAkBQ,EAAAJ,GAAA,eAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,oEAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAA,EAAA,OAAqJE,OAAOG,IAAA,uDAAAC,IAAA,QAAuEK,EAAAJ,GAAA,KAAAP,EAAA,MAAyBE,OAAOC,GAAA,WAAcQ,EAAAJ,GAAA,eAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,kEAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAA,EAAA,OAAmJE,OAAOG,IAAA,uDAAAC,IAAA,QAAuEK,EAAAJ,GAAA,KAAAP,EAAA,MAAyBE,OAAOC,GAAA,eAAkBQ,EAAAJ,GAAA,eAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,0BAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAA,EAAA,MAAAW,EAAAJ,GAAA,aAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAW,EAAAJ,GAAA,2BAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAW,EAAAJ,GAAA,wBAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAW,EAAAJ,GAAA,yBAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAW,EAAAJ,GAAA,mBAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAW,EAAAJ,GAAA,qBAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAW,EAAAJ,GAAA,kBAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAW,EAAAJ,GAAA,cAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAW,EAAAJ,GAAA,mBAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAW,EAAAJ,GAAA,iBAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAW,EAAAJ,GAAA,qBAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAW,EAAAJ,GAAA,mBAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAW,EAAAJ,GAAA,uBAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAW,EAAAJ,GAAA,oBAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAW,EAAAJ,GAAA,oBAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAW,EAAAJ,GAAA,YAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,sBAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAA,EAAA,MAAAW,EAAAJ,GAAA,uBAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAW,EAAAJ,GAAA,qBAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAW,EAAAJ,GAAA,oBAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAW,EAAAJ,GAAA,kBAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAW,EAAAJ,GAAA,iBAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAW,EAAAJ,GAAA,cAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAW,EAAAJ,GAAA,eAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAW,EAAAJ,GAAA,kBAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAW,EAAAJ,GAAA,kBAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAA6zCE,OAAOC,GAAA,0BAA6BQ,EAAAJ,GAAA,4BAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAA0DE,OAAOC,GAAA,aAAgBQ,EAAAJ,GAAA,aAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,uEAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,QAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAA,EAAA,MAAAA,EAAA,UAAAW,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,8BAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAA,EAAA,UAAAW,EAAAJ,GAAA,iBAAAI,EAAAJ,GAAA,+BAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAA,EAAA,UAAAW,EAAAJ,GAAA,aAAAI,EAAAJ,GAAA,wHAAAI,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAkjBI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,UAAmCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,aAAAI,EAAAJ,GAAA,4CAAgEI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,OAAAP,EAAA,QAAAW,EAAAJ,GAAA,YAAAI,EAAAJ,GAAA,MAAAP,EAAA,QAAAW,EAAAJ,GAAA,WAAAI,EAAAJ,GAAA,MAAAP,EAAA,QAAAW,EAAAJ,GAAA,WAAAI,EAAAJ,GAAA,SAAAP,EAAA,QAAAW,EAAAJ,GAAA,oBAAAI,EAAAJ,GAAA,uCAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAsRE,OAAOC,GAAA,+CAAkDQ,EAAAJ,GAAA,gDAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,yEAAAI,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAA8LI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,UAAmCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,2BAAAI,EAAAJ,GAAA,0DAA8FP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,wBAAAI,EAAAJ,GAAA,+DAA8FI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,SAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,+CAAAI,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAwJI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,UAAmCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,2BAAAI,EAAAJ,GAAA,MAAAP,EAAA,QAA4DI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAA0CI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,UAAAP,EAAA,QAA+CI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAA0CI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,SAA4BP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,wBAAAI,EAAAJ,GAAA,MAAAP,EAAA,QAAyDI,YAAA,gBAA0BO,EAAAJ,GAAA,SAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAAyCI,YAAA,gBAA0BO,EAAAJ,GAAA,WAAAI,EAAAJ,GAAA,mBAAqCI,EAAAJ,GAAA,KAAAP,EAAA,KAAAA,EAAA,OAAuCE,OAAOG,IAAA,uDAAAC,IAAA,QAAuEK,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,sCAAAI,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAsGI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,UAAmCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,2BAAAI,EAAAJ,GAAA,cAAAP,EAAA,QAAoEI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,aAAAP,EAAA,QAAkDI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,+BAAAP,EAAA,QAAoEI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,YAAAP,EAAA,QAAiDI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,eAAkCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,wBAAAI,EAAAJ,GAAA,mBAAAP,EAAA,QAAsEI,YAAA,gBAA0BO,EAAAJ,GAAA,SAAAI,EAAAJ,GAAA,gBAAAP,EAAA,QAAoDI,YAAA,gBAA0BO,EAAAJ,GAAA,WAAAI,EAAAJ,GAAA,4CAA8DI,EAAAJ,GAAA,KAAAP,EAAA,KAAAA,EAAA,OAAuCE,OAAOG,IAAA,sDAAAC,IAAA,QAAsEK,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,mEAAAI,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAmII,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,UAAmCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,wBAAAI,EAAAJ,GAAA,mBAAAP,EAAA,QAAsEI,YAAA,gBAA0BO,EAAAJ,GAAA,SAAAI,EAAAJ,GAAA,2BAAAP,EAAA,QAA+DI,YAAA,gBAA0BO,EAAAJ,GAAA,SAAAI,EAAAJ,GAAA,yBAAyCI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,wBAAAP,EAAA,QAAAW,EAAAJ,GAAA,cAAAI,EAAAJ,GAAA,eAAAI,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAmJI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,UAAmCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,2BAAAI,EAAAJ,GAAA,MAAAP,EAAA,QAA4DI,YAAA,kBAA4BO,EAAAJ,GAAA,YAAAI,EAAAJ,GAAA,0BAAAP,EAAA,QAAiEI,YAAA,gBAA0BO,EAAAJ,GAAA,QAAAI,EAAAJ,GAAA,cAA6BI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,iBAAAI,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAsFI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,UAAmCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,2BAAAI,EAAAJ,GAAA,MAAAP,EAAA,QAA4DI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,iBAAAP,EAAA,QAAsDI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,iBAAAP,EAAA,QAAsDI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,iBAAAP,EAAA,QAAsDI,YAAA,gBAA0BO,EAAAJ,GAAA,QAAAI,EAAAJ,GAAA,cAA6BI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,qFAAAI,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAA0JI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,UAAmCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,2BAAAI,EAAAJ,GAAA,MAAAP,EAAA,QAA4DI,YAAA,gBAA0BO,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,OAAAP,EAAA,QAAyCI,YAAA,gBAA0BO,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,OAAAP,EAAA,QAAyCI,YAAA,gBAA0BO,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,gBAA8BI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,sEAAAI,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAA2II,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,UAAmCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,2BAAAI,EAAAJ,GAAA,MAAAP,EAAA,QAA4DI,YAAA,gBAA0BO,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,OAAAP,EAAA,QAAyCI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAA0CI,YAAA,gBAA0BO,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,OAAAP,EAAA,QAAyCI,YAAA,gBAA0BO,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,gBAA8BI,EAAAJ,GAAA,KAAAP,EAAA,MAA8BE,OAAOC,GAAA,yBAA4BQ,EAAAJ,GAAA,yBAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,SAAAP,EAAA,QAAAW,EAAAJ,GAAA,eAAAI,EAAAJ,GAAA,8EAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,QAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAA,EAAA,MAAAA,EAAA,QAAAW,EAAAJ,GAAA,sBAAAI,EAAAJ,GAAA,kCAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAA,EAAA,QAAAW,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,oBAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAA,EAAA,UAAAW,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,mBAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,SAAAI,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAyiBI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,aAAAI,EAAAJ,GAAA,UAAgCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,eAAAI,EAAAJ,GAAA,kBAA4CP,EAAA,QAAgBI,YAAA,wBAAkCO,EAAAJ,GAAA,aAAAI,EAAAJ,GAAA,UAAgCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,eAAAI,EAAAJ,GAAA,gBAA0CP,EAAA,QAAgBI,YAAA,wBAAkCO,EAAAJ,GAAA,aAAAI,EAAAJ,GAAA,UAAgCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,eAAAI,EAAAJ,GAAA,mBAA6CP,EAAA,QAAgBI,YAAA,wBAAkCO,EAAAJ,GAAA,aAAAI,EAAAJ,GAAA,UAAgCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,eAAAI,EAAAJ,GAAA,oBAA4CP,EAAA,QAAkBI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,UAAmCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,2BAAAI,EAAAJ,GAAA,MAAAP,EAAA,QAA4DI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAA0CI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAA0CI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAA0CI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,SAA4BP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,wBAAAI,EAAAJ,GAAA,eAAgDP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,yBAAAI,EAAAJ,GAAA,WAAAP,EAAA,QAA+DI,YAAA,gBAA0BO,EAAAJ,GAAA,mCAAAI,EAAAJ,GAAA,UAAAP,EAAA,QAA0EI,YAAA,gBAA0BO,EAAAJ,GAAA,2BAAAI,EAAAJ,GAAA,UAAAP,EAAA,QAAkEI,YAAA,gBAA0BO,EAAAJ,GAAA,mCAAAI,EAAAJ,GAAA,cAA0DI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,6BAAAP,EAAA,UAAAW,EAAAJ,GAAA,YAAAI,EAAAJ,GAAA,oBAAAP,EAAA,UAAAW,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,kBAAAP,EAAA,UAAAW,EAAAJ,GAAA,aAAAI,EAAAJ,GAAA,yBAAAP,EAAA,UAAAW,EAAAJ,GAAA,YAAAI,EAAAJ,GAAA,WAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAA,EAAA,OAAoUE,OAAOG,IAAA,uDAAAC,IAAA,QAAuEK,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,4BAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,iBAAAP,EAAA,QAAAW,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,6CAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,yGAAAP,EAAA,UAAAW,EAAAJ,GAAA,WAAAI,EAAAJ,GAAA,sCAAAP,EAAA,UAAAW,EAAAJ,GAAA,SAAAI,EAAAJ,GAAA,uFAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAohBE,OAAOC,GAAA,mBAAsBQ,EAAAJ,GAAA,mBAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,gFAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,QAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAA,EAAA,MAAAA,EAAA,UAAAW,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,sBAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAA,EAAA,UAAAW,EAAAJ,GAAA,aAAAI,EAAAJ,GAAA,qHAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAA,EAAA,QAAAW,EAAAJ,GAAA,wBAAAI,EAAAJ,GAAA,OAAAP,EAAA,QAAAW,EAAAJ,GAAA,4BAAAI,EAAAJ,GAAA,wHAAAI,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAgtBI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,UAAmCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,mBAAAI,EAAAJ,GAAA,+EAAyGI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,uCAAAI,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAA4GI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,UAAmCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,mBAAAI,EAAAJ,GAAA,wBAAAP,EAAA,QAAsEI,YAAA,gBAA0BO,EAAAJ,GAAA,4BAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAA8DI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,kCAAAP,EAAA,QAAuEI,YAAA,gBAA0BO,EAAAJ,GAAA,4BAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAA8DI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,4BAAAP,EAAA,QAAiEI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,mBAAoCI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,YAAAI,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAiFI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,UAAmCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,wBAAAI,EAAAJ,GAAA,mBAAAP,EAAA,QAAsEI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,2BAAAP,EAAA,QAAgEI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,oBAAuCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,2BAAAI,EAAAJ,GAAA,WAAAP,EAAA,QAAiEI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,cAAiCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,yBAAAI,EAAAJ,GAAA,WAAAP,EAAA,QAA+DI,YAAA,gBAA0BO,EAAAJ,GAAA,4BAAAI,EAAAJ,GAAA,UAAAP,EAAA,QAAmEI,YAAA,gBAA0BO,EAAAJ,GAAA,4BAAAI,EAAAJ,GAAA,cAAmDI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,yCAAAP,EAAA,QAAAW,EAAAJ,GAAA,uBAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAAAW,EAAAJ,GAAA,oBAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAAAW,EAAAJ,GAAA,oBAAAI,EAAAJ,GAAA,6BAAAP,EAAA,QAAAW,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,SAAAP,EAAA,QAAAW,EAAAJ,GAAA,mBAAAI,EAAAJ,GAAA,eAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAA0XE,OAAOC,GAAA,mCAAsCQ,EAAAJ,GAAA,oCAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,qCAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,QAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAA,EAAA,MAAAA,EAAA,QAAAW,EAAAJ,GAAA,eAAAI,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAuQI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,UAAmCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,qBAAAI,EAAAJ,GAAA,sBAAoDP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,kBAAAI,EAAAJ,GAAA,2BAAoDI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,SAAAI,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAA8EI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,UAAmCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,2BAAAI,EAAAJ,GAAA,MAAAP,EAAA,QAA4DI,YAAA,gBAA0BO,EAAAJ,GAAA,WAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAA2CI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAA0CI,YAAA,gBAA0BO,EAAAJ,GAAA,WAAAI,EAAAJ,GAAA,SAA6BP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,wBAAAI,EAAAJ,GAAA,MAAAP,EAAA,QAAyDI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,UAAAP,EAAA,QAA+CI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,SAA4BP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,qBAAAI,EAAAJ,GAAA,MAAAP,EAAA,QAAsDI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,SAA4BP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,kBAAAI,EAAAJ,GAAA,MAAAP,EAAA,QAAmDI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,cAA+BI,EAAAJ,GAAA,KAAAP,EAAA,KAAAA,EAAA,OAAuCE,OAAOG,IAAA,qDAAAC,IAAA,QAAqEK,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,8BAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAkFE,OAAOC,GAAA,cAAiBQ,EAAAJ,GAAA,cAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,wCAAAI,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAA2HI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,UAAmCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,cAAAI,EAAAJ,GAAA,gDAAqEI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,cAAAI,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAmFI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,UAAmCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,2BAAAI,EAAAJ,GAAA,MAAAP,EAAA,QAA4DI,YAAA,gBAA0BO,EAAAJ,GAAA,WAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAA2CI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAA0CI,YAAA,gBAA0BO,EAAAJ,GAAA,WAAAI,EAAAJ,GAAA,SAA6BP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,wBAAAI,EAAAJ,GAAA,MAAAP,EAAA,QAAyDI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,UAAAP,EAAA,QAA+CI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,SAA4BP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,cAAAI,EAAAJ,GAAA,MAAAP,EAAA,QAA+CI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAA0CI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,cAA+BI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,uDAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAgHE,OAAOC,GAAA,mBAAsBQ,EAAAJ,GAAA,mBAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,wEAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,QAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAA,EAAA,MAAAA,EAAA,UAAAW,EAAAJ,GAAA,WAAAI,EAAAJ,GAAA,oBAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAA,EAAA,UAAAW,EAAAJ,GAAA,SAAAI,EAAAJ,GAAA,oBAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAA,EAAA,UAAAW,EAAAJ,GAAA,YAAAI,EAAAJ,GAAA,qBAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAA,EAAA,UAAAW,EAAAJ,GAAA,aAAAI,EAAAJ,GAAA,+BAAAI,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAqhBI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,UAAmCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,mBAAAI,EAAAJ,GAAA,8CAAwEI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,SAAAI,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAA8EI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,UAAmCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,mBAAAI,EAAAJ,GAAA,qBAA+CI,EAAAJ,GAAA,KAAAP,EAAA,KAAAA,EAAA,OAAuCE,OAAOG,IAAA,uDAAAC,IAAA,QAAuEK,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAqCI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,SAAkCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,mBAAAI,EAAAJ,GAAA,mBAA6CI,EAAAJ,GAAA,KAAAP,EAAA,KAAAA,EAAA,OAAuCE,OAAOG,IAAA,uDAAAC,IAAA,QAAuEK,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAqCI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,UAAmCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,mBAAAI,EAAAJ,GAAA,sBAAgDI,EAAAJ,GAAA,KAAAP,EAAA,KAAAA,EAAA,OAAuCE,OAAOG,IAAA,uDAAAC,IAAA,QAAuEK,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAqCI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,UAAmCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,mBAAAI,EAAAJ,GAAA,uBAAiDI,EAAAJ,GAAA,KAAAP,EAAA,KAAAA,EAAA,OAAuCE,OAAOG,IAAA,uDAAAC,IAAA,QAAuEK,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,yBAAAP,EAAA,QAAAW,EAAAJ,GAAA,kBAAAI,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAwIE,OAAOC,GAAA,iBAAoBQ,EAAAJ,GAAA,iBAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,mFAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,QAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAA,EAAA,MAAAA,EAAA,UAAAW,EAAAJ,GAAA,WAAAI,EAAAJ,GAAA,oBAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAA,EAAA,UAAAW,EAAAJ,GAAA,SAAAI,EAAAJ,GAAA,oBAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAA,EAAA,UAAAW,EAAAJ,GAAA,YAAAI,EAAAJ,GAAA,uBAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAA,EAAA,UAAAW,EAAAJ,GAAA,aAAAI,EAAAJ,GAAA,+BAAAI,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAgiBI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,UAAmCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,iBAAAI,EAAAJ,GAAA,8CAAsEI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,SAAAI,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAA8EI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,UAAmCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,iBAAAI,EAAAJ,GAAA,qBAA6CI,EAAAJ,GAAA,KAAAP,EAAA,KAAAA,EAAA,OAAuCE,OAAOG,IAAA,uDAAAC,IAAA,QAAuEK,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAqCI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,UAAmCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,iBAAAI,EAAAJ,GAAA,mBAA2CI,EAAAJ,GAAA,KAAAP,EAAA,KAAAA,EAAA,OAAuCE,OAAOG,IAAA,uDAAAC,IAAA,QAAuEK,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAqCI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,UAAmCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,iBAAAI,EAAAJ,GAAA,sBAA8CI,EAAAJ,GAAA,KAAAP,EAAA,KAAAA,EAAA,OAAuCE,OAAOG,IAAA,uDAAAC,IAAA,4CAA2GK,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAqCI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,UAAmCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,iBAAAI,EAAAJ,GAAA,uBAA+CI,EAAAJ,GAAA,KAAAP,EAAA,KAAAA,EAAA,OAAuCE,OAAOG,IAAA,uDAAAC,IAAA,6CAA4GK,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,yBAAAP,EAAA,QAAAW,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAsIE,OAAOC,GAAA,qBAAwBQ,EAAAJ,GAAA,qBAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,sJAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,QAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAA,EAAA,MAAAW,EAAAJ,GAAA,0BAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAW,EAAAJ,GAAA,wBAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAW,EAAAJ,GAAA,2BAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAW,EAAAJ,GAAA,4CAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAW,EAAAJ,GAAA,mEAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAW,EAAAJ,GAAA,sDAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAW,EAAAJ,GAAA,wDAAAI,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAA0wBI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,UAAmCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,qBAAAI,EAAAJ,GAAA,4FAAwHI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,SAAAI,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAA8EI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,UAAmCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,qBAAAI,EAAAJ,GAAA,qBAAiDI,EAAAJ,GAAA,KAAAP,EAAA,KAAAA,EAAA,OAAuCE,OAAOG,IAAA,uDAAAC,IAAA,+CAA8GK,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAqCI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,UAAmCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,qBAAAI,EAAAJ,GAAA,mBAA+CI,EAAAJ,GAAA,KAAAP,EAAA,KAAAA,EAAA,OAAuCE,OAAOG,IAAA,uDAAAC,IAAA,6CAA4GK,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAqCI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,UAAmCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,qBAAAI,EAAAJ,GAAA,sBAAkDI,EAAAJ,GAAA,KAAAP,EAAA,KAAAA,EAAA,OAAuCE,OAAOG,IAAA,uDAAAC,IAAA,gDAA+GK,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAqCI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,UAAmCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,qBAAAI,EAAAJ,GAAA,uBAAmDI,EAAAJ,GAAA,KAAAP,EAAA,KAAAA,EAAA,OAAuCE,OAAOG,IAAA,uDAAAC,IAAA,iDAAgHK,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAqCI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,UAAmCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,qBAAAI,EAAAJ,GAAA,4BAAwDI,EAAAJ,GAAA,KAAAP,EAAA,KAAAA,EAAA,OAAuCE,OAAOG,IAAA,uDAAAC,IAAA,sDAAqHK,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAqCI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,UAAmCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,qBAAAI,EAAAJ,GAAA,6BAAyDI,EAAAJ,GAAA,KAAAP,EAAA,KAAAA,EAAA,OAAuCE,OAAOG,IAAA,uDAAAC,IAAA,uDAAsHK,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAqCI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,UAAmCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,qBAAAI,EAAAJ,GAAA,4BAAwDI,EAAAJ,GAAA,KAAAP,EAAA,KAAAA,EAAA,OAAuCE,OAAOG,IAAA,sDAAAC,IAAA,sDAAoHK,EAAAJ,GAAA,KAAAP,EAAA,MAAyBE,OAAOC,GAAA,mBAAsBQ,EAAAJ,GAAA,mBAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,yJAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,QAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAA,EAAA,MAAAW,EAAAJ,GAAA,0BAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAW,EAAAJ,GAAA,wBAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAW,EAAAJ,GAAA,2BAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAW,EAAAJ,GAAA,4CAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAW,EAAAJ,GAAA,mEAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAW,EAAAJ,GAAA,sDAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAW,EAAAJ,GAAA,wDAAAI,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAA2wBI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,UAAmCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,mBAAAI,EAAAJ,GAAA,4FAAsHI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,SAAAI,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAA8EI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,UAAmCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,mBAAAI,EAAAJ,GAAA,qBAA+CI,EAAAJ,GAAA,KAAAP,EAAA,KAAAA,EAAA,OAAuCE,OAAOG,IAAA,sDAAAC,IAAA,6CAA2GK,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAqCI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,UAAmCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,mBAAAI,EAAAJ,GAAA,mBAA6CI,EAAAJ,GAAA,KAAAP,EAAA,KAAAA,EAAA,OAAuCE,OAAOG,IAAA,uDAAAC,IAAA,2CAA0GK,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAqCI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,UAAmCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,mBAAAI,EAAAJ,GAAA,sBAAgDI,EAAAJ,GAAA,KAAAP,EAAA,KAAAA,EAAA,OAAuCE,OAAOG,IAAA,uDAAAC,IAAA,8CAA6GK,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAqCI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,UAAmCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,mBAAAI,EAAAJ,GAAA,uBAAiDI,EAAAJ,GAAA,KAAAP,EAAA,KAAAA,EAAA,OAAuCE,OAAOG,IAAA,uDAAAC,IAAA,+CAA8GK,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAqCI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,UAAmCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,mBAAAI,EAAAJ,GAAA,4BAAsDI,EAAAJ,GAAA,KAAAP,EAAA,KAAAA,EAAA,OAAuCE,OAAOG,IAAA,uDAAAC,IAAA,oDAAmHK,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAqCI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,UAAmCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,mBAAAI,EAAAJ,GAAA,6BAAuDI,EAAAJ,GAAA,KAAAP,EAAA,KAAAA,EAAA,OAAuCE,OAAOG,IAAA,uDAAAC,IAAA,qDAAoHK,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAqCI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,UAAmCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,mBAAAI,EAAAJ,GAAA,4BAAsDI,EAAAJ,GAAA,KAAAP,EAAA,KAAAA,EAAA,OAAuCE,OAAOG,IAAA,sDAAAC,IAAA,oDAAkHK,EAAAJ,GAAA,KAAAP,EAAA,MAAyBE,OAAOC,GAAA,uCAA0CQ,EAAAJ,GAAA,wCAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,2GAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,QAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAA,EAAA,MAAAA,EAAA,QAAAW,EAAAJ,GAAA,kBAAAI,EAAAJ,GAAA,iDAAAI,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAqXI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,UAAmCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,uBAAAI,EAAAJ,GAAA,2BAA2DP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,oBAAAI,EAAAJ,GAAA,gCAA2DI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,4BAAAI,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAiGI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,UAAmCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,2BAAAI,EAAAJ,GAAA,MAAAP,EAAA,QAA4DI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAA0CI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,SAA4BP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,wBAAAI,EAAAJ,GAAA,MAAAP,EAAA,QAAyDI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAA0CI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,aAA8BI,EAAAJ,GAAA,KAAAP,EAAA,KAAAA,EAAA,OAAuCE,OAAOG,IAAA,uDAAAC,IAAA,6BAA4FK,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,qBAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,yDAAAI,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAyKI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,aAAAI,EAAAJ,GAAA,UAAgCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,iBAAAI,EAAAJ,GAAA,MAAAP,EAAA,QAAkDI,YAAA,gBAA0BO,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,OAAAP,EAAA,QAAyCI,YAAA,gBAA0BO,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,SAAyBP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,cAAAI,EAAAJ,GAAA,MAAAP,EAAA,QAA+CI,YAAA,gBAA0BO,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,OAAAP,EAAA,QAAyCI,YAAA,gBAA0BO,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,UAA4BP,EAAA,QAAgBI,YAAA,wBAAkCO,EAAAJ,GAAA,aAAAI,EAAAJ,GAAA,UAAgCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,iBAAAI,EAAAJ,GAAA,MAAAP,EAAA,QAAkDI,YAAA,gBAA0BO,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,OAAAP,EAAA,QAAyCI,YAAA,gBAA0BO,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,SAAyBP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,cAAAI,EAAAJ,GAAA,MAAAP,EAAA,QAA+CI,YAAA,gBAA0BO,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,OAAAP,EAAA,QAAyCI,YAAA,gBAA0BO,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,cAA4BI,EAAAJ,GAAA,KAAAP,EAAA,KAAAA,EAAA,OAAuCE,OAAOG,IAAA,uDAAAC,IAAA,kCAAiGK,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,iKAAAI,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAiOI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,UAAmCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,uBAAAI,EAAAJ,GAAA,MAAAP,EAAA,QAAwDI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,cAA+BI,EAAAJ,GAAA,KAAAP,EAAA,KAAAA,EAAA,OAAuCE,OAAOG,IAAA,uDAAAC,IAAA,kCAAiGK,EAAAJ,GAAA,KAAAP,EAAA,MAAyBE,OAAOC,GAAA,oBAAuBQ,EAAAJ,GAAA,oBAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,0EAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,QAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAA,EAAA,MAAAW,EAAAJ,GAAA,mCAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAW,EAAAJ,GAAA,sCAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAW,EAAAJ,GAAA,wDAAAI,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAoaI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,UAAmCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,oBAAAI,EAAAJ,GAAA,sDAAiFI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,WAAAP,EAAA,QAAAW,EAAAJ,GAAA,WAAAI,EAAAJ,GAAA,2BAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,oBAAAI,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAA8LI,YAAA,cAAwBJ,EAAA,QAAaI,YAAA,aAAuBO,EAAAJ,GAAA,KAAAP,EAAA,QAAyBI,YAAA,cAAwBO,EAAAJ,GAAA,aAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAA6CI,YAAA,cAAwBO,EAAAJ,GAAA,WAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAA2CI,YAAA,gBAA0BO,EAAAJ,GAAA,iBAAAI,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,QAAAP,EAAA,QAAoEI,YAAA,aAAuBO,EAAAJ,GAAA,KAAAP,EAAA,QAAyBI,YAAA,cAAwBO,EAAAJ,GAAA,SAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAAyCI,YAAA,cAAwBO,EAAAJ,GAAA,WAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAA2CI,YAAA,gBAA0BO,EAAAJ,GAAA,cAAAI,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,UAAAP,EAAA,QAAmEI,YAAA,aAAuBO,EAAAJ,GAAA,MAAAP,EAAA,QAA0BI,YAAA,cAAwBO,EAAAJ,GAAA,SAAAI,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,QAAAP,EAAA,QAA0DI,YAAA,aAAuBO,EAAAJ,GAAA,KAAAP,EAAA,QAAyBI,YAAA,cAAwBO,EAAAJ,GAAA,SAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAAyCI,YAAA,cAAwBO,EAAAJ,GAAA,WAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAA2CI,YAAA,gBAA0BO,EAAAJ,GAAA,cAAAI,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,UAAAP,EAAA,QAAmEI,YAAA,aAAuBO,EAAAJ,GAAA,MAAAP,EAAA,QAA0BI,YAAA,cAAwBO,EAAAJ,GAAA,SAAAI,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,QAAAP,EAAA,QAA0DI,YAAA,aAAuBO,EAAAJ,GAAA,KAAAP,EAAA,QAAyBI,YAAA,cAAwBO,EAAAJ,GAAA,SAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAAyCI,YAAA,cAAwBO,EAAAJ,GAAA,WAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAA2CI,YAAA,gBAA0BO,EAAAJ,GAAA,cAAAI,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,UAAAP,EAAA,QAAmEI,YAAA,aAAuBO,EAAAJ,GAAA,MAAAP,EAAA,QAA0BI,YAAA,cAAwBO,EAAAJ,GAAA,SAAAI,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,QAAAP,EAAA,QAA0DI,YAAA,aAAuBO,EAAAJ,GAAA,KAAAP,EAAA,QAAyBI,YAAA,cAAwBO,EAAAJ,GAAA,SAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAAyCI,YAAA,cAAwBO,EAAAJ,GAAA,WAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAA2CI,YAAA,gBAA0BO,EAAAJ,GAAA,cAAAI,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,UAAAP,EAAA,QAAmEI,YAAA,aAAuBO,EAAAJ,GAAA,MAAAP,EAAA,QAA0BI,YAAA,cAAwBO,EAAAJ,GAAA,SAAAI,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,QAAAP,EAAA,QAA0DI,YAAA,aAAuBO,EAAAJ,GAAA,KAAAP,EAAA,QAAyBI,YAAA,cAAwBO,EAAAJ,GAAA,SAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAAyCI,YAAA,cAAwBO,EAAAJ,GAAA,WAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAA2CI,YAAA,gBAA0BO,EAAAJ,GAAA,cAAAI,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,UAAAP,EAAA,QAAmEI,YAAA,aAAuBO,EAAAJ,GAAA,MAAAP,EAAA,QAA0BI,YAAA,cAAwBO,EAAAJ,GAAA,SAAAI,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,MAAAP,EAAA,QAAwDI,YAAA,aAAuBO,EAAAJ,GAAA,MAAAP,EAAA,QAA0BI,YAAA,cAAwBO,EAAAJ,GAAA,aAAAI,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,uDAAAI,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAwKI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,UAAmCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,aAAAI,EAAAJ,GAAA,eAAqCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,2BAAAI,EAAAJ,GAAA,MAAAP,EAAA,QAA4DI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAA0CI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAA0CI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAA0CI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAA0CI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,SAA4BP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,wBAAAI,EAAAJ,GAAA,MAAAP,EAAA,QAAyDI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAA0CI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,SAA4BP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,oBAAAI,EAAAJ,GAAA,mBAA8CI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,0CAAAI,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAA+GI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,aAAAI,EAAAJ,GAAA,UAAgCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,iBAAAI,EAAAJ,GAAA,MAAAP,EAAA,QAAkDI,YAAA,gBAA0BO,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,SAAyBP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,cAAAI,EAAAJ,GAAA,MAAAP,EAAA,QAA+CI,YAAA,gBAA0BO,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,OAAAP,EAAA,QAAyCI,YAAA,gBAA0BO,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,UAA4BP,EAAA,QAAgBI,YAAA,wBAAkCO,EAAAJ,GAAA,aAAAI,EAAAJ,GAAA,UAAgCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,iBAAAI,EAAAJ,GAAA,MAAAP,EAAA,QAAkDI,YAAA,gBAA0BO,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,SAAyBP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,cAAAI,EAAAJ,GAAA,MAAAP,EAAA,QAA+CI,YAAA,gBAA0BO,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,OAAAP,EAAA,QAAyCI,YAAA,gBAA0BO,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,cAA4BI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,uGAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAA,EAAA,OAAyKE,OAAOG,IAAA,uDAAAC,IAAA,4CAA2GK,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,yEAAAI,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAyII,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,UAAmCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,aAAAI,EAAAJ,GAAA,eAAqCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,2BAAAI,EAAAJ,GAAA,MAAAP,EAAA,QAA4DI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAA0CI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAA0CI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAA0CI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAA0CI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,SAA4BP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,wBAAAI,EAAAJ,GAAA,MAAAP,EAAA,QAAyDI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAA0CI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,SAA4BP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,oBAAAI,EAAAJ,GAAA,sBAAiDI,EAAAJ,GAAA,KAAAP,EAAA,KAAAA,EAAA,OAAuCE,OAAOG,IAAA,uDAAAC,IAAA,+CAA8GK,EAAAJ,GAAA,KAAAP,EAAA,MAAyBE,OAAOC,GAAA,UAAaQ,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,4NAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,QAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAA,EAAA,MAAAW,EAAAJ,GAAA,0BAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAA,EAAA,QAAAW,EAAAJ,GAAA,0BAAAI,EAAAJ,GAAA,OAAAP,EAAA,QAAAW,EAAAJ,GAAA,6BAAAI,EAAAJ,GAAA,mGAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAA,EAAA,QAAAW,EAAAJ,GAAA,sBAAAI,EAAAJ,GAAA,MAAAP,EAAA,QAAAW,EAAAJ,GAAA,sBAAAI,EAAAJ,GAAA,oBAAAP,EAAA,QAAAW,EAAAJ,GAAA,yBAAAI,EAAAJ,GAAA,oKAAAI,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAw9BI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,YAAmCP,EAAA,QAAoBI,YAAA,mBAA6BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,mIAAoJI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,SAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,cAAAI,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAuHI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,UAAmCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,MAAAP,EAAA,QAA2CI,YAAA,gBAA0BO,EAAAJ,GAAA,WAAAI,EAAAJ,GAAA,YAAAP,EAAA,QAAkDI,YAAA,gBAA0BO,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,YAAAP,EAAA,QAA8CI,YAAA,gBAA0BO,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,YAA8BP,EAAA,QAAgBI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,UAAmCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,wBAAAI,EAAAJ,GAAA,MAAAP,EAAA,QAAyDI,YAAA,gBAA0BO,EAAAJ,GAAA,WAAAI,EAAAJ,GAAA,cAAkCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,2BAAAI,EAAAJ,GAAA,MAAAP,EAAA,QAA4DI,YAAA,gBAA0BO,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,YAAAP,EAAA,QAA8CI,YAAA,gBAA0BO,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,WAA2BP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,yBAAAI,EAAAJ,GAAA,oBAAoDI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,cAAAI,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAmFI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,UAAmCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,aAAAP,EAAA,QAAkDI,YAAA,gBAA0BO,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,mBAAqCP,EAAA,QAAgBI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,UAAmCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,oBAAAI,EAAAJ,GAAA,iBAA8CP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,oBAAAI,EAAAJ,GAAA,MAAAP,EAAA,QAAqDI,YAAA,gBAA0BO,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,WAA2BP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,uBAAAI,EAAAJ,GAAA,oBAAkDI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,6KAAAI,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAkPI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,UAAmCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,mBAAAP,EAAA,QAAwDI,YAAA,gBAA0BO,EAAAJ,GAAA,4BAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAA8DI,YAAA,gBAA0BO,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,wCAAAP,EAAA,QAA0EI,YAAA,gBAA0BO,EAAAJ,GAAA,4BAAAI,EAAAJ,GAAA,KAAAP,EAAA,QAA8DI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,gCAAAP,EAAA,QAAqEI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,mBAAoCI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,aAAAI,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAkFI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,UAAmCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,yBAAAI,EAAAJ,GAAA,WAAAP,EAAA,QAA+DI,YAAA,gBAA0BO,EAAAJ,GAAA,4BAAAI,EAAAJ,GAAA,UAAAP,EAAA,QAAmEI,YAAA,gBAA0BO,EAAAJ,GAAA,4BAAAI,EAAAJ,GAAA,SAAgDP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,wBAAAI,EAAAJ,GAAA,mBAAAP,EAAA,QAAsEI,YAAA,gBAA0BO,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,6BAAAP,EAAA,QAA+DI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,oBAAuCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,2BAAAI,EAAAJ,GAAA,WAAAP,EAAA,QAAiEI,YAAA,gBAA0BO,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,mBAAoCI,EAAAJ,GAAA,KAAAP,EAAA,MAA8BE,OAAOC,GAAA,qBAAwBQ,EAAAJ,GAAA,uBAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAqDE,OAAOC,GAAA,qEAAwEQ,EAAAJ,GAAA,iFAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,iJAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,QAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAA,EAAA,MAAAA,EAAA,QAAAW,EAAAJ,GAAA,YAAAI,EAAAJ,GAAA,2CAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAA,EAAA,QAAAW,EAAAJ,GAAA,mBAAAI,EAAAJ,GAAA,uBAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAA,EAAA,QAAAW,EAAAJ,GAAA,iBAAAI,EAAAJ,GAAA,+BAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAW,EAAAJ,GAAA,uCAAAI,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAirBI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,WAAAI,EAAAJ,GAAA,UAA8BP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,uBAAAI,EAAAJ,GAAA,kSAAgUI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,SAAAI,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAA8EI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,aAAAI,EAAAJ,GAAA,UAAgCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,uBAAAI,EAAAJ,GAAA,MAAAP,EAAA,QAAwDI,YAAA,gBAA0BO,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,SAAyBP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,qBAAAI,EAAAJ,GAAA,eAA6CP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,oBAAAI,EAAAJ,GAAA,kCAAAP,EAAA,QAAiFI,YAAA,gBAA0BO,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,aAA2BI,EAAAJ,GAAA,KAAAP,EAAA,KAAAA,EAAA,OAAuCE,OAAOG,IAAA,sDAAAC,IAAA,4CAA0GK,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAqCI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,aAAAI,EAAAJ,GAAA,UAAgCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,uBAAAI,EAAAJ,GAAA,MAAAP,EAAA,QAAwDI,YAAA,gBAA0BO,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,SAAyBP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,qBAAAI,EAAAJ,GAAA,0BAAwDP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,oBAAAI,EAAAJ,GAAA,MAAAP,EAAA,QAAqDI,YAAA,gBAA0BO,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,2BAAAP,EAAA,QAA6DI,YAAA,gBAA0BO,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,aAA2BI,EAAAJ,GAAA,KAAAP,EAAA,KAAAA,EAAA,OAAuCE,OAAOG,IAAA,uDAAAC,IAAA,4CAA2GK,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,8DAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,wCAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAqLE,OAAOC,GAAA,2BAA8BQ,EAAAJ,GAAA,4BAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,iFAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,QAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAA,EAAA,MAAAA,EAAA,QAAAW,EAAAJ,GAAA,kBAAAI,EAAAJ,GAAA,OAAAP,EAAA,QAAAW,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,8BAAAI,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAA4WI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,WAAAI,EAAAJ,GAAA,UAA8BP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,iBAAAI,EAAAJ,GAAA,kEAA4FP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,cAAAI,EAAAJ,GAAA,uEAA4FI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,SAAAI,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAA8EI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,aAAAI,EAAAJ,GAAA,UAAgCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,iBAAAI,EAAAJ,GAAA,MAAAP,EAAA,QAAkDI,YAAA,gBAA0BO,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,YAAAP,EAAA,QAA8CI,YAAA,gBAA0BO,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,SAAyBP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,cAAAI,EAAAJ,GAAA,mBAAAP,EAAA,QAA4DI,YAAA,gBAA0BO,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,cAA4BI,EAAAJ,GAAA,KAAAP,EAAA,KAAAA,EAAA,OAAuCE,OAAOG,IAAA,uDAAAC,IAAA,uCAAsGK,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,+BAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAmFE,OAAOC,GAAA,eAAkBQ,EAAAJ,GAAA,eAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,wJAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,QAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAA,EAAA,MAAAA,EAAA,QAAAW,EAAAJ,GAAA,YAAAI,EAAAJ,GAAA,aAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAA,EAAA,QAAAW,EAAAJ,GAAA,iBAAAI,EAAAJ,GAAA,OAAAP,EAAA,QAAAW,EAAAJ,GAAA,oBAAAI,EAAAJ,GAAA,OAAAP,EAAA,QAAAW,EAAAJ,GAAA,eAAAI,EAAAJ,GAAA,OAAAP,EAAA,QAAAW,EAAAJ,GAAA,kBAAAI,EAAAJ,GAAA,gDAAAI,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAmmBI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,WAAAI,EAAAJ,GAAA,UAA8BP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,eAAAI,EAAAJ,GAAA,gFAAsGI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,SAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,cAAAI,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAuHI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,aAAAI,EAAAJ,GAAA,UAAgCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,eAAAI,EAAAJ,GAAA,qBAA2CI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,iFAAAI,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAsJI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,aAAAI,EAAAJ,GAAA,UAAgCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,eAAAI,EAAAJ,GAAA,MAAAP,EAAA,QAAgDI,YAAA,gBAA0BO,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,gCAAAP,EAAA,QAAkEI,YAAA,gBAA0BO,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,aAA2BI,EAAAJ,GAAA,KAAAP,EAAA,KAAAA,EAAA,OAAuCE,OAAOG,IAAA,uDAAAC,IAAA,4BAA2FK,EAAAJ,GAAA,KAAAP,EAAA,MAAyBE,OAAOC,GAAA,kBAAqBQ,EAAAJ,GAAA,kBAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,uEAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,QAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAA,EAAA,MAAAW,EAAAJ,GAAA,2BAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAW,EAAAJ,GAAA,yBAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAW,EAAAJ,GAAA,4BAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAW,EAAAJ,GAAA,mCAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,SAAAI,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAidI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,aAAAI,EAAAJ,GAAA,UAAgCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,kBAAAI,EAAAJ,GAAA,qBAA8CI,EAAAJ,GAAA,KAAAP,EAAA,KAAAA,EAAA,OAAuCE,OAAOG,IAAA,uDAAAC,IAAA,4CAA2GK,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAqCI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,aAAAI,EAAAJ,GAAA,UAAgCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,kBAAAI,EAAAJ,GAAA,mBAA4CI,EAAAJ,GAAA,KAAAP,EAAA,KAAAA,EAAA,OAAuCE,OAAOG,IAAA,uDAAAC,IAAA,0CAAyGK,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAqCI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,aAAAI,EAAAJ,GAAA,UAAgCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,kBAAAI,EAAAJ,GAAA,sBAA+CI,EAAAJ,GAAA,KAAAP,EAAA,KAAAA,EAAA,OAAuCE,OAAOG,IAAA,uDAAAC,IAAA,6CAA4GK,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAqCI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,aAAAI,EAAAJ,GAAA,UAAgCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,kBAAAI,EAAAJ,GAAA,uBAAgDI,EAAAJ,GAAA,KAAAP,EAAA,KAAAA,EAAA,OAAuCE,OAAOG,IAAA,uDAAAC,IAAA,8CAA6GK,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,kEAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAsHE,OAAOC,GAAA,gBAAmBQ,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,yEAAAI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,QAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAA,EAAA,MAAAW,EAAAJ,GAAA,2BAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAW,EAAAJ,GAAA,yBAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAW,EAAAJ,GAAA,4BAAAI,EAAAJ,GAAA,KAAAP,EAAA,MAAAW,EAAAJ,GAAA,mCAAAI,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAA6aI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,WAAAI,EAAAJ,GAAA,UAA8BP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,8CAAqEI,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,SAAAI,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAA8EI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,aAAAI,EAAAJ,GAAA,UAAgCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,qBAA4CI,EAAAJ,GAAA,KAAAP,EAAA,KAAAA,EAAA,OAAuCE,OAAOG,IAAA,uDAAAC,IAAA,0CAAyGK,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAqCI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,aAAAI,EAAAJ,GAAA,UAAgCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,mBAA0CI,EAAAJ,GAAA,KAAAP,EAAA,KAAAA,EAAA,OAAuCE,OAAOG,IAAA,sDAAAC,IAAA,wCAAsGK,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAqCI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,aAAAI,EAAAJ,GAAA,UAAgCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,sBAA6CI,EAAAJ,GAAA,KAAAP,EAAA,KAAAA,EAAA,OAAuCE,OAAOG,IAAA,uDAAAC,IAAA,2CAA0GK,EAAAJ,GAAA,KAAAP,EAAA,OAAAA,EAAA,QAAqCI,YAAA,aAAuBJ,EAAA,QAAaI,YAAA,wBAAkCO,EAAAJ,GAAA,aAAAI,EAAAJ,GAAA,UAAgCP,EAAA,QAAkBI,YAAA,mBAA6BO,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,uBAA8CI,EAAAJ,GAAA,KAAAP,EAAA,KAAAA,EAAA,OAAuCE,OAAOG,IAAA,uDAAAC,IAAA,4CAA2GK,EAAAJ,GAAA,KAAAP,EAAA,KAAAW,EAAAJ,GAAA,uECEr0jE,IAcAS,EAdyBC,EAAQ,OAcjCC,EF81BAC,KADA,WAEA,OACAC,IAAA,gCE91BEzB,GATF,EAVA,SAAA0B,GACEJ,EAAQ,SAaV,KAEA,MAUeK,EAAA,QAAAN,EAAiB","file":"static/js/4.13c6041879f597f2027d.js","sourcesContent":["<template>\n  <div id=\"detail\">\n    <section class=\"user-info\">\n      <img src=\"http://cn.gravatar.com/avatar/1?s=128&d=identicon\" alt=\"\" class=\"avatar\">\n      <h3>前端异步大揭秘</h3>\n      <p>\n        <router-link to=\"/user\">若愚</router-link>\n        发布于3天前\n      </p>\n    </section>\n    <section class=\"article\">\n\n\n      <h1 id=\"css-网格布局学习指南\">CSS 网格布局学习指南</h1>\n      <p>CSS 网格布局(Grid Layout) 是CSS中最强大的布局系统。 这是一个二维系统，这意味着它可以同时处理列和行，不像 <a\n        href=\"https://css-tricks.com/snippets/css/a-guide-to-flexbox/\" target=\"_blank\">flexbox</a> 那样主要是一维系统。\n        你可以通过将CSS规则应用于父元素（成为网格容器）和该元素的子元素（网格元素），来使用网格布局。</p>\n      <blockquote>\n        <p><a href=\"https://css-tricks.com/snippets/css/complete-guide-grid/\" target=\"_blank\">本文</a>出自于 <a\n          href=\"http://chris.house/blog/a-complete-guide-css-grid-layout/\" target=\"_blank\">Chris House</a> 的个人博客，由<a\n          href=\"https://jirengu.com\" target=\"_blank\">饥人谷</a> <a href=\"https://www.zhihu.com/people/jirengu-ruo-yu\"\n                                                                target=\"_blank\">若愚老师</a>翻译</p>\n      </blockquote>\n      <h2 id=\"引言\">引言</h2>\n      <p>CSS网格布局（又名“网格”）是一个二维的基于网格的布局系统，其目的只在于完全改变我们设计基于网格的用户界面的方式。 CSS一直用来布局网页，但一直都不完美。 一开始我们使用table\n        做布局，然后转向浮动、定位以及inline-block，但所有这些方法本质上都是 Hack 的方式，并且遗漏了很多重要的功能（例如垂直居中）。\n        Flexbox的出现在一定程度上解决了这个问题，但是它的目的是为了更简单的一维布局，而不是复杂的二维布局（Flexbox和Grid实际上一起工作得很好）。 只要我们一直在制作网站，我们就一直在为解决布局问题不断探索，\n        而Grid是第一个专门为解决布局问题而生的CSS模块。</p>\n      <p>有两个东西，启发我写这篇指南。 第一个是雷切尔·安德鲁（Rachel Andrew）的书<a\n        href=\"http://abookapart.com/products/get-ready-for-css-grid-layout\" target=\"_blank\">为CSS Grid布局准备</a>。\n        这本书对网格布局做了彻底、清晰的介绍，也是是整篇文章的基础，我强烈建议你购买并阅读他的书。 我的另一个重要灵感是Chris Coyier的<a\n          href=\"https://css-tricks.com/snippets/css/a-guide-to-flexbox/\" target=\"_blank\">Flexbox完全指南</a>，当需要查阅 flexbox\n        的一切资料时我就会找这篇文章。 这篇文章帮助了很多人学习 Flex 布局，也是 Google 上搜索“flexbox”关键字排名第一的文章。你会发现他的文章和我的很多相似之处，有最好的范例在那放着为什么咱不偷师学着写呢？\n      </p>\n      <p>本指南的目的是介绍网格概念，因为它们存在于最新版本的规范中。 因此我不会覆盖过时的IE语法，而且随着规范的成熟，我会尽最大努力保存更新本指南。</p>\n      <h2 id=\"基础知识以及浏览器支持情况\">基础知识以及浏览器支持情况</h2>\n      <p>\n        一开始你需要使用<code>display：grid</code>把容器元素定义为一个网格，使用<code>grid-template-columns</code>和<code>grid-template-rows</code>设置列和行大小，然后使用<code>grid-column</code>\n        和 <code>grid-row</code>把它的子元素放入网格。 与flexbox类似，网格子元素的原始顺序不重要。 你的可以在 CSS 里以任意顺序放置它们，这使得使用媒体查询重新排列网格变得非常容易。\n        想象一下，我们需要定义整个页面的布局，然后为了适应不同的屏幕宽度完全重新排列，我们只需要几行CSS就能实现这个需求。 网格是有史以来最强大的CSS模块之一。</p>\n      <p>截至2017年3月，许多浏览器都提供了原生的、不加前缀的对CSS Grid的支持，比如 Chrome（包括Android），Firefox，Safari（包括iOS）和Opera。 另一方面，Internet\n        Explorer 10和11支持它，但需要使用过时的语法。 Edge浏览器已经宣布将支持标准的Grid语法，但暂未支持。</p>\n      <blockquote>\n        <p>浏览器支持的详细数据可在<a href=\"http://caniuse.com/#feat=css-grid\" target=\"_blank\">Caniuse</a>查看。其中里面的数字表示该版本以上的浏览器支持Grid。\n        </p>\n      </blockquote>\n      <h3 id=\"桌面浏览器\">桌面浏览器</h3>\n      <table>\n        <thead>\n        <tr>\n          <th style=\"text-align:center\">Chrome</th>\n          <th style=\"text-align:center\">Opera</th>\n          <th style=\"text-align:center\">Firefox</th>\n          <th style=\"text-align:center\">IE</th>\n          <th style=\"text-align:center\">Edge</th>\n          <th style=\"text-align:center\">Safari</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr>\n          <td style=\"text-align:center\">57</td>\n          <td style=\"text-align:center\">44</td>\n          <td style=\"text-align:center\">52</td>\n          <td style=\"text-align:center\">11*</td>\n          <td style=\"text-align:center\">16</td>\n          <td style=\"text-align:center\">10.1</td>\n        </tr>\n        </tbody>\n      </table>\n      <h3 id=\"移动端--平板\">移动端 / 平板</h3>\n      <table>\n        <thead>\n        <tr>\n          <th style=\"text-align:center\">iOS Safari</th>\n          <th style=\"text-align:center\">Opera Mobile</th>\n          <th style=\"text-align:center\">Opera Mini</th>\n          <th style=\"text-align:center\">Android</th>\n          <th style=\"text-align:center\">Android Chrome</th>\n          <th style=\"text-align:center\">Android Firefox</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr>\n          <td style=\"text-align:center\">10.3</td>\n          <td style=\"text-align:center\">No</td>\n          <td style=\"text-align:center\">No</td>\n          <td style=\"text-align:center\">62</td>\n          <td style=\"text-align:center\">62</td>\n          <td style=\"text-align:center\">57</td>\n        </tr>\n        </tbody>\n      </table>\n      <p>除了微软之外，浏览器制造商在 Grid 规范完全落地以前似乎并没有放手让 Gird 野生也长的打算。 这是一件好事，这意味着我们不需要再去学习各种浏览器兼容版本的旧语法。</p>\n      <p>在生产环境中使用Grid只是时间问题，但现在是我们该学习的时候了。</p>\n      <h2 id=\"重要术语\">重要术语</h2>\n      <p>在深入了解网格的概念之前，理解术语是很重要的。 由于这里所涉及的术语在概念上都是相似的，如果不先记住它们在网格规范中定义的含义，则很容易将它们彼此混淆。 但是不用太担心，这些术语并不多。</p>\n      <h3 id=\"grid-container\">Grid Container</h3>\n      <p>设置了 <code>display: gird</code> 的元素。 这是所有 grid item 的直接父项。 在下面的例子中，<code>.container</code> 就是是 grid container。\n      </p>\n      <pre><code class=\"lang-html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span\n        class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"container\"</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span\n    class=\"hljs-string\">\"item item-1\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span\n    class=\"hljs-string\">\"item item-2\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span\n    class=\"hljs-string\">\"item item-3\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n</code></pre>\n      <h3 id=\"grid-item\">Grid Item</h3>\n      <p>Grid 容器的孩子（直接子元素）。下面的 <code>.item</code> 元素就是 grid item，但 <code>.sub-item</code>不是。</p>\n      <pre><code class=\"lang-html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span\n        class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"container\"</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span\n    class=\"hljs-string\">\"item\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span\n          class=\"hljs-name\">div</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span\n    class=\"hljs-string\">\"item\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">class</span>=<span\n      class=\"hljs-string\">\"sub-item\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span\n          class=\"hljs-name\">p</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span\n    class=\"hljs-string\">\"item\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span\n          class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n</code></pre>\n      <h3 id=\"grid-line\">Grid Line</h3>\n      <p>这个分界线组成网格结构。 它们既可以是垂直的（“column grid lines”），也可以是水平的（“row grid lines”），并位于行或列的任一侧。 下面例中的黄线就是一个列网格线。</p>\n      <p><img src=\"https://cloud.hunger-valley.com/18-1-11/48497835.jpg\" alt=\"\"></p>\n      <h3 id=\"grid-track\">Grid Track</h3>\n      <p>两个相邻网格线之间的空间。 你可以把它们想象成网格的列或行。 下面是第二行和第三行网格线之间的网格轨道。</p>\n      <p><img src=\"https://cloud.hunger-valley.com/18-1-11/44840078.jpg\" alt=\"\"></p>\n      <h3 id=\"grid-cell\">Grid Cell</h3>\n      <p>两个相邻的行和两个相邻的列网格线之间的空间。它是网格的一个“单元”。 下面是行网格线1和2之间以及列网格线2和3的网格单元。</p>\n      <p><img src=\"https://cloud.hunger-valley.com/18-1-11/38456584.jpg\" alt=\"\"></p>\n      <h3 id=\"grid-\">Grid Area</h3>\n      <p>四个网格线包围的总空间。 网格区域可以由任意数量的网格单元组成。 下面是行网格线1和3以及列网格线1和3之间的网格区域。</p>\n      <p><img src=\"https://cloud.hunger-valley.com/18-1-11/38612829.jpg\" alt=\"\"></p>\n      <h2 id=\"grid-属性列表\">Grid 属性列表</h2>\n      <p>Grid Container 的全部属性</p>\n      <ul>\n        <li>display</li>\n        <li>grid-template-columns</li>\n        <li>grid-template-rows</li>\n        <li>grid-template-areas</li>\n        <li>grid-template</li>\n        <li>grid-column-gap</li>\n        <li>grid-row-gap</li>\n        <li>grid-gap</li>\n        <li>justify-items</li>\n        <li>align-items</li>\n        <li>justify-content</li>\n        <li>align-content</li>\n        <li>grid-auto-columns</li>\n        <li>grid-auto-rows</li>\n        <li>grid-auto-flow</li>\n        <li>grid</li>\n      </ul>\n      <p>Grid Items 的全部属性</p>\n      <ul>\n        <li>grid-column-start</li>\n        <li>grid-column-end</li>\n        <li>grid-row-start</li>\n        <li>grid-row-end</li>\n        <li>grid-column</li>\n        <li>grid-row</li>\n        <li>grid-area</li>\n        <li>justify-self</li>\n        <li>align-self</li>\n      </ul>\n      <h2 id=\"父容器grid-container的属性\">父容器(Grid Container)的属性</h2>\n      <h3 id=\"display\">display</h3>\n      <p>将元素定义为 grid contaienr，并为其内容建立新的网格格式化上下文(grid formatting context)。</p>\n      <p>值:</p>\n      <ul>\n        <li><strong>grid</strong> - 生成一个块级(block-level)网格</li>\n        <li><strong>inline-grid</strong> - 生成一个行级(inline-level)网格</li>\n        <li><strong>subgrid</strong> - 如果你的 grid container 本身就是一个 grid\n          item（即,嵌套网格），你可以使用这个属性来表示你想从它的父节点获取它的行/列的大小，而不是指定它自己的大小。\n        </li>\n      </ul>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">display</span>: grid | inline-grid | subgrid;\n}\n</code></pre>\n      <p>注意：<code>column</code>, <code>float</code>, <code>clear</code>, 以及 <code>vertical-align</code> 对一个 grid\n        container 没有影响</p>\n      <h3 id=\"grid-template-columns--grid-template-rows\">grid-template-columns / grid-template-rows</h3>\n      <p>使用以空格分隔的多个值来定义网格的列和行。这些值表示轨道大小(track size)，它们之间的空格代表表格线(grid line)。</p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">grid-template-columns</span>: &lt;track-size&gt; ... | &lt;line-name&gt; &lt;track-size&gt; ...;\n  <span class=\"hljs-attribute\">grid-template-rows</span>: &lt;track-size&gt; ... | &lt;line-name&gt; &lt;track-size&gt; ...;\n}\n</code></pre>\n      <p>例子:</p>\n      <p>(如果未显示的给网格线命名)，轨道值之间仅仅有空格时，网格线会被自动分配数字名称：</p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">grid-template-columns</span>: <span class=\"hljs-number\">40px</span> <span\n          class=\"hljs-number\">50px</span> auto <span class=\"hljs-number\">50px</span> <span\n          class=\"hljs-number\">40px</span>;\n  <span class=\"hljs-attribute\">grid-template-rows</span>: <span class=\"hljs-number\">25%</span> <span\n          class=\"hljs-number\">100px</span> auto;\n}\n</code></pre>\n      <p><img src=\"https://cloud.hunger-valley.com/18-1-11/55281623.jpg\" alt=\"\"></p>\n      <p>但你可以给网格线指定确切的命名。 注意中括号里的网格线命名语法：</p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">grid-template-columns</span>: [first] <span class=\"hljs-number\">40px</span> [line2] <span\n          class=\"hljs-number\">50px</span> [line3] auto [col4-start] <span class=\"hljs-number\">50px</span> [five] <span\n          class=\"hljs-number\">40px</span> [end];\n  <span class=\"hljs-attribute\">grid-template-rows</span>: [row1-start] <span\n          class=\"hljs-number\">25%</span> [row1-end] <span class=\"hljs-number\">100px</span> [third-line] auto [last-line];\n}\n</code></pre>\n      <p><img src=\"https://cloud.hunger-valley.com/18-1-11/1314820.jpg\" alt=\"\"></p>\n      <p>需要注意的是，一个网格线可以有不止一个名字。例如，这里第2条网格线有两个名字：row1-end 和 row2-start：</p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">grid-template-rows</span>: [row1-start] <span class=\"hljs-number\">25%</span> [row1-end row2-start] <span\n          class=\"hljs-number\">25%</span> [row2-end];\n}\n</code></pre>\n      <p>如果你的定义中包含重复的部分，则可以使用<code>repeat()</code> 符号来简化写法：</p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">grid-template-columns</span>: <span class=\"hljs-built_in\">repeat</span>(3, 20px [col-start]) <span\n          class=\"hljs-number\">5%</span>;\n}\n</code></pre>\n      <p>上面的写法和下面等价：</p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">grid-template-columns</span>: <span class=\"hljs-number\">20px</span> [col-start] <span\n          class=\"hljs-number\">20px</span> [col-start] <span class=\"hljs-number\">20px</span> [col-start] <span\n          class=\"hljs-number\">5%</span>;\n}\n</code></pre>\n      <p>“fr”单位允许您将轨道大小设置为网格容器自由空间的一部分。 例如，下面的代码会将每个 grid item 为 grid container 宽度的三分之一：</p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">grid-template-columns</span>: <span class=\"hljs-number\">1</span>fr <span\n          class=\"hljs-number\">1</span>fr <span class=\"hljs-number\">1</span>fr;\n}\n</code></pre>\n      <p>自由空间是在排除所有不可伸缩的 grid item 之后计算得到的。 在下面的示例中，fr单位可用的自由空间总量不包括50px:</p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">grid-template-columns</span>: <span class=\"hljs-number\">1</span>fr <span\n          class=\"hljs-number\">50px</span> <span class=\"hljs-number\">1</span>fr <span class=\"hljs-number\">1</span>fr;\n}\n</code></pre>\n      <h3 id=\"grid-template-areas\">grid-template-areas</h3>\n      <p>通过引用 <code>grid-area</code>属性指定的网格区域的名称来定义网格模板。 重复网格区域的名称导致内容扩展到这些单元格。 点号表示一个空单元格。 语法本身提供了网格结构的可视化。</p>\n      <p>值：</p>\n      <ul>\n        <li><code>&lt;grid-area-name&gt;</code> - 使用 grid-area 属性设置的网格区域的名称</li>\n        <li><code>.</code> - 点号代表一个空网格单元</li>\n        <li><strong>none</strong> - 没有定义网格区域</li>\n      </ul>\n      <p>举例：</p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.item-a</span> {\n  <span class=\"hljs-attribute\">grid-area</span>: header;\n}\n<span class=\"hljs-selector-class\">.item-b</span> {\n  <span class=\"hljs-attribute\">grid-area</span>: main;\n}\n<span class=\"hljs-selector-class\">.item-c</span> {\n  <span class=\"hljs-attribute\">grid-area</span>: sidebar;\n}\n<span class=\"hljs-selector-class\">.item-d</span> {\n  <span class=\"hljs-attribute\">grid-area</span>: footer;\n}\n\n<span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">grid-template-columns</span>: <span class=\"hljs-number\">50px</span> <span\n          class=\"hljs-number\">50px</span> <span class=\"hljs-number\">50px</span> <span class=\"hljs-number\">50px</span>;\n  <span class=\"hljs-attribute\">grid-template-rows</span>: auto;\n  <span class=\"hljs-attribute\">grid-template-areas</span>:\n    <span class=\"hljs-string\">\"header header header header\"</span>\n    <span class=\"hljs-string\">\"main main . sidebar\"</span>\n    <span class=\"hljs-string\">\"footer footer footer footer\"</span>;\n}\n</code></pre>\n      <p>这将创建一个四列宽三行高的网格。 整个第一行将由 <strong>header</strong> 区域组成。 中间一行将由两个 <strong>main</strong> 区域、一个空单元格和一个 <strong>sidebar</strong>\n        区域组成。 最后一行是<strong>footer</strong>区域组成。</p>\n      <p><img src=\"https://cloud.hunger-valley.com/18-1-11/45883436.jpg\" alt=\"\"></p>\n      <p>你的声明中的每一行都需要有相同数量的单元格。</p>\n      <p>您可以使用任意数量的相邻的<code>.</code>来声明单个空单元格。 只要这些点号之间没有空格，他们就代表了一个单一的单元格。</p>\n      <p>需要注意的是你不是在用这个语法命名网格线，而是在命名区域。 当你使用这种语法时，区域两端的网格线实际上是自动命名的。 比如，如果网格区域的名称是foo，那么区域的起始的行网格线和列网格线名称是 foo-<strong>start</strong>，并且区域终点的行网格线和列网格线名称是\n        foo-<strong>end</strong>。 这意味着某些网格线可能有多个名称，比如上面的例子中最左边的一条网格线有三个名字：header-start，main-start 和 footer-start。</p>\n      <h3 id=\"grid-template\">grid-template</h3>\n      <p>在单个声明中定义 grid-template-rows、grid-template-columns、grid-template-areas 的简写。</p>\n      <p>值：</p>\n      <ul>\n        <li><strong>none</strong> - 将三个属性都设置为其初始值</li>\n        <li><strong>subgrid</strong> - 把 grid-template-rows 和 grid-template-columns 设置为 subgrid, 并且 grid-template-areas\n          设置为初始值\n        </li>\n        <li><code>grid-template-rows</code> / <code>&lt;grid-template-columns</code> - 把 grid-template-columns 和\n          grid-template-rows 设置为指定值, 与此同时, 设置 grid-template-areas 为 none\n        </li>\n      </ul>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">grid-template</span>: none | subgrid | &lt;grid-template-rows&gt; / &lt;grid-template-columns&gt;;\n}\n</code></pre>\n      <p>它也可以使用一个更复杂但相当方便的语法来指定这三个值。 一个例子：</p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">grid-template</span>:\n    [row1-start] <span class=\"hljs-string\">\"header header header\"</span> <span class=\"hljs-number\">25px</span> [row1-end]\n    [row2-start] <span class=\"hljs-string\">\"footer footer footer\"</span> <span class=\"hljs-number\">25px</span> [row2-end]\n    / auto <span class=\"hljs-number\">50px</span> auto;\n}\n</code></pre>\n      <p>以上等价于：</p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">grid-template-rows</span>: [row1-start] <span class=\"hljs-number\">25px</span> [row1-end row2-start] <span\n          class=\"hljs-number\">25px</span> [row2-end];\n  <span class=\"hljs-attribute\">grid-template-columns</span>: auto <span class=\"hljs-number\">50px</span> auto;\n  <span class=\"hljs-attribute\">grid-template-areas</span>:\n    <span class=\"hljs-string\">\"header header header\"</span>\n    <span class=\"hljs-string\">\"footer footer footer\"</span>;\n}\n</code></pre>\n      <p>由于 grid-template\n        不会重置隐式网格属性（<code>grid-auto-columns</code>，<code>grid-auto-rows</code>和<code>grid-auto-flow</code>），而这可能是大多数情况下你想要做的。因此建议使用<code>grid</code>属性来代替<code>grid-template</code>。\n      </p>\n      <h3 id=\"grid-column-gap--grid-row-gap\">grid-column-gap / grid-row-gap</h3>\n      <p>指定网格线的大小，你可以把它想象为设置列/行之间的间距的宽度。</p>\n      <p>值：</p>\n      <ul>\n        <li><code>line-size</code> - 一个长度值</li>\n      </ul>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">grid-column-gap</span>: &lt;line-size&gt;;\n  <span class=\"hljs-attribute\">grid-row-gap</span>: &lt;line-size&gt;;\n}\n</code></pre>\n      <p>举例：</p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">grid-template-columns</span>: <span class=\"hljs-number\">100px</span> <span\n          class=\"hljs-number\">50px</span> <span class=\"hljs-number\">100px</span>;\n  <span class=\"hljs-attribute\">grid-template-rows</span>: <span class=\"hljs-number\">80px</span> auto <span\n          class=\"hljs-number\">80px</span>;\n  <span class=\"hljs-attribute\">grid-column-gap</span>: <span class=\"hljs-number\">10px</span>;\n  <span class=\"hljs-attribute\">grid-row-gap</span>: <span class=\"hljs-number\">15px</span>;\n}\n</code></pre>\n      <p><img src=\"https://cloud.hunger-valley.com/18-1-11/406531.jpg\" alt=\"\"></p>\n      <p>只能在列/行之间创建缝隙，而不是在外部边缘创建。</p>\n      <h3 id=\"grid-gap\">grid-gap</h3>\n      <p>grid-row-gap 和 grid-column-gap 的缩写</p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">grid-gap</span>: &lt;grid-row-gap&gt; &lt;grid-column-gap&gt;;\n}\n</code></pre>\n      <p>Example:</p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">grid-template-columns</span>: <span class=\"hljs-number\">100px</span> <span\n          class=\"hljs-number\">50px</span> <span class=\"hljs-number\">100px</span>;\n  <span class=\"hljs-attribute\">grid-template-rows</span>: <span class=\"hljs-number\">80px</span> auto <span\n          class=\"hljs-number\">80px</span>;\n  <span class=\"hljs-attribute\">grid-gap</span>: <span class=\"hljs-number\">10px</span> <span\n          class=\"hljs-number\">15px</span>;\n}\n</code></pre>\n      <p>如果没有指定 grid-row-gap，则会被设置为与 grid-column-gap 相同的值。</p>\n      <h3 id=\"justify-items\">justify-items</h3>\n      <p>沿着行轴对齐网格内的内容（与之对应的是 align-items, 即沿着列轴对齐），该值适用于容器内的所有的 grid items。</p>\n      <p>值：</p>\n      <ul>\n        <li><strong>start</strong>: 内容与网格区域的左端对齐</li>\n        <li><strong>end</strong>: 内容与网格区域的右端对齐</li>\n        <li><strong>center</strong>: 内容位于网格区域的中间位置</li>\n        <li><strong>stretch</strong>: 内容宽度占据整个网格区域空间(这是默认值)</li>\n      </ul>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">justify-items</span>: start | end | center | stretch;\n}\n</code></pre>\n      <p>举例：</p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">justify-items</span>: start;\n}\n</code></pre>\n      <p><img src=\"https://cloud.hunger-valley.com/18-1-11/81852061.jpg\" alt=\"\"></p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.container</span>{\n  <span class=\"hljs-attribute\">justify-items</span>: end;\n}\n</code></pre>\n      <p><img src=\"https://cloud.hunger-valley.com/18-1-11/57749032.jpg\" alt=\"\"></p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">justify-items</span>: center;\n}\n</code></pre>\n      <p><img src=\"https://cloud.hunger-valley.com/18-1-11/73568687.jpg\" alt=\"\"></p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">justify-items</span>: stretch;\n}\n</code></pre>\n      <p><img src=\"https://cloud.hunger-valley.com/18-1-11/81147184.jpg\" alt=\"\"></p>\n      <p>也可以通过给单个 grid item 设置<code>justify-self</code>属性来达到上述效果。</p>\n      <h3 id=\"align-items\">align-items</h3>\n      <p>沿着列轴对齐grid item 里的内容（与之对应的是使用 justify-items 设置沿着行轴对齐），该值适用于容器内的所有 grid items。</p>\n      <p>值：</p>\n      <ul>\n        <li><strong>start</strong>: 内容与网格区域的顶端对齐</li>\n        <li><strong>end</strong>: 内容与网格区域的底部对齐</li>\n        <li><strong>center</strong>: 内容位于网格区域的垂直中心位置</li>\n        <li><strong>stretch</strong>: 内容高度占据整个网格区域空间(这是默认值)</li>\n      </ul>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">align-items</span>: start | end | center | stretch;\n}\n</code></pre>\n      <p>举例:</p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">align-items</span>: start;\n}\n</code></pre>\n      <p><img src=\"https://cloud.hunger-valley.com/18-1-11/31201904.jpg\" alt=\"\"></p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">align-items</span>: end;\n}\n</code></pre>\n      <p><img src=\"https://cloud.hunger-valley.com/18-1-11/37389909.jpg\" alt=\"\"></p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">align-items</span>: center;\n}\n</code></pre>\n      <p><img src=\"https://cloud.hunger-valley.com/18-1-11/64308393.jpg\" alt=\"Example of align-items set to center\"></p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">align-items</span>: stretch;\n}\n</code></pre>\n      <p><img src=\"https://cloud.hunger-valley.com/18-1-11/33767654.jpg\" alt=\"Example of align-items set to stretch\">\n      </p>\n      <p>也可以通过给单个 grid item 设置<code>align-self</code>属性来达到上述效果。</p>\n      <h3 id=\"justify-content\">justify-content</h3>\n      <p>有时，网格的总大小可能小于其网格容器的大小。如果你的所有 grid items 都使用像px这样的非弹性单位来设置大小，则可能发生这种情况。此时，你可以设置网格容器内的网格的对齐方式。 此属性沿着行轴对齐网格（与之对应的是\n        align-content, 沿着列轴对齐）。</p>\n      <p>值：</p>\n      <ul>\n        <li>start - 网格与网格容器的左边对齐</li>\n        <li>end - 网格与网格容器的右边对齐</li>\n        <li>center - 网格与网格容器的中间对齐</li>\n        <li>stretch - 调整g rid item 的大小，让宽度填充整个网格容器</li>\n        <li>space-around - 在 grid item 之间设置均等宽度的空白间隙，其外边缘间隙大小为中间空白间隙宽度的一半</li>\n        <li>space-between - 在 grid item 之间设置均等宽度空白间隙，其外边缘无间隙</li>\n        <li>space-evenly - 在每个 grid item 之间设置均等宽度的空白间隙，包括外边缘</li>\n      </ul>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">justify-content</span>: start | end | center | stretch | space-around | space-between | space-evenly;\n}\n</code></pre>\n      <p>举例：</p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">justify-content</span>: start;\n}\n</code></pre>\n      <p><img src=\"https://cloud.hunger-valley.com/18-1-18/16621438.jpg\" alt=\"Example of justify-content set to start\">\n      </p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">justify-content</span>: end;\n}\n</code></pre>\n      <p><img src=\"https://cloud.hunger-valley.com/18-1-11/46252522.jpg\" alt=\"Example of justify-content set to end\">\n      </p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">justify-content</span>: center;\n}\n</code></pre>\n      <p><img src=\"https://cloud.hunger-valley.com/18-1-11/31369605.jpg\" alt=\"Example of justify-content set to center\">\n      </p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">justify-content</span>: stretch;\n}\n</code></pre>\n      <p><img src=\"https://cloud.hunger-valley.com/18-1-11/65452171.jpg\"\n              alt=\"Example of justify-content set to stretch\"></p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">justify-content</span>: space-around;\n}\n</code></pre>\n      <p><img src=\"https://cloud.hunger-valley.com/18-1-12/79036314.jpg\"\n              alt=\"Example of justify-content set to space-around\"></p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">justify-content</span>: space-between;\n}\n</code></pre>\n      <p><img src=\"https://cloud.hunger-valley.com/18-1-12/36148565.jpg\"\n              alt=\"Example of justify-content set to space-between\"></p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">justify-content</span>: space-evenly;\n}\n</code></pre>\n      <p><img src=\"https://cloud.hunger-valley.com/18-1-12/9095829.jpg\"\n              alt=\"Example of justify-content set to space-evenly\"></p>\n      <h3 id=\"align-content\">align-content</h3>\n      <p>有时，网格的总大小可能小于其网格容器的大小。如果你的所有 grid items 都使用像px这样的非弹性单位来设置大小，则可能发生这种情况。此时，你可以设置网格容器内的网格的对齐方式。 此属性沿着列轴对齐网格（与之对应的是\n        justify-content, 即沿着行轴对齐）。</p>\n      <p>值：</p>\n      <ul>\n        <li>start - 网格与网格容器的顶部对齐</li>\n        <li>end - 网格与网格容器的底部对齐</li>\n        <li>center - 网格与网格容器的中间对齐</li>\n        <li>stretch - 调整 grid item 的大小，让高度填充整个网格容器</li>\n        <li>space-around - 在 grid item 之间设置均等宽度的空白间隙，其外边缘间隙大小为中间空白间隙宽度的一半</li>\n        <li>space-between - 在 grid item 之间设置均等宽度空白间隙，其外边缘无间隙</li>\n        <li>space-evenly - 在每个 grid item 之间设置均等宽度的空白间隙，包括外边缘</li>\n      </ul>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">align-content</span>: start | end | center | stretch | space-around | space-between | space-evenly;\n}\n</code></pre>\n      <p>举例：</p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">align-content</span>: start;\n}\n</code></pre>\n      <p><img src=\"https://cloud.hunger-valley.com/18-1-12/9095829.jpg\" alt=\"Example of align-content set to start\"></p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">align-content</span>: end;\n}\n</code></pre>\n      <p><img src=\"https://cloud.hunger-valley.com/18-1-12/15060507.jpg\" alt=\"Example of align-content set to end\"></p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">align-content</span>: center;\n}\n</code></pre>\n      <p><img src=\"https://cloud.hunger-valley.com/18-1-12/72396881.jpg\" alt=\"Example of align-content set to center\">\n      </p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">align-content</span>: stretch;\n}\n</code></pre>\n      <p><img src=\"https://cloud.hunger-valley.com/18-1-12/46794685.jpg\" alt=\"Example of align-content set to stretch\">\n      </p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">align-content</span>: space-around;\n}\n</code></pre>\n      <p><img src=\"https://cloud.hunger-valley.com/18-1-12/81192919.jpg\"\n              alt=\"Example of align-content set to space-around\"></p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">align-content</span>: space-between;\n}\n</code></pre>\n      <p><img src=\"https://cloud.hunger-valley.com/18-1-12/27437729.jpg\"\n              alt=\"Example of align-content set to space-between\"></p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">align-content</span>: space-evenly;\n}\n</code></pre>\n      <p><img src=\"https://cloud.hunger-valley.com/18-1-12/6825571.jpg\"\n              alt=\"Example of align-content set to space-evenly\"></p>\n      <h3 id=\"grid-auto-columns--grid-auto-rows\">grid-auto-columns / grid-auto-rows</h3>\n      <p>指定自动生成的网格轨道（又名隐式网格轨道）的大小。 隐式网格轨道在你显式的定位超出指定网格范围的行或列（使用 grid-template-rows/grid-template-columns）时被创建。</p>\n      <p>值：</p>\n      <ul>\n        <li><code>&lt;track-size&gt;</code> - 可以是一个长度值，一个百分比值，或者一个自由空间的一部分（使用 fr 单位）</li>\n      </ul>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">grid-auto-columns</span>: &lt;track-size&gt; ...;\n  <span class=\"hljs-attribute\">grid-auto-rows</span>: &lt;track-size&gt; ...;\n}\n</code></pre>\n      <p>为了说明如何创建隐式网格轨道，思考如下代码：</p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">grid-template-columns</span>: <span class=\"hljs-number\">60px</span> <span\n          class=\"hljs-number\">60px</span>;\n  <span class=\"hljs-attribute\">grid-template-rows</span>: <span class=\"hljs-number\">90px</span> <span\n          class=\"hljs-number\">90px</span>\n}\n</code></pre>\n      <p><img src=\"https://cloud.hunger-valley.com/18-1-12/90644000.jpg\" alt=\"Example of 2 x 2 grid\"></p>\n      <p>这里创建了一个 2x2的网格。</p>\n      <p>但是，现在想象一下，使用 grid-column 和 grid-row 来定位你的网格项目，如下所示：</p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.item-a</span> {\n  <span class=\"hljs-attribute\">grid-column</span>: <span class=\"hljs-number\">1</span> / <span\n          class=\"hljs-number\">2</span>;\n  <span class=\"hljs-attribute\">grid-row</span>: <span class=\"hljs-number\">2</span> / <span class=\"hljs-number\">3</span>;\n}\n<span class=\"hljs-selector-class\">.item-b</span> {\n  <span class=\"hljs-attribute\">grid-column</span>: <span class=\"hljs-number\">5</span> / <span\n          class=\"hljs-number\">6</span>;\n  <span class=\"hljs-attribute\">grid-row</span>: <span class=\"hljs-number\">2</span> / <span class=\"hljs-number\">3</span>;\n}\n</code></pre>\n      <p><img src=\"https://cloud.hunger-valley.com/18-1-12/38445302.jpg\" alt=\"Example of implicit tracks\"></p>\n      <p>这里我们指定 .item-b开始于列网格线 5 并结束于在列网格线 6，但我们并未定义列网格线 5 或 6。因为我们引用不存在的网格线，宽度为0的隐式轨道的就会被创建用与填补间隙。我们可以使用\n        grid-auto-columns 和 grid-auto-rows属性来指定这些隐式轨道的宽度：</p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">grid-auto-columns</span>: <span class=\"hljs-number\">60px</span>;\n}\n</code></pre>\n      <p><img src=\"https://cloud.hunger-valley.com/18-1-12/33573866.jpg\" alt=\"Example of implicit tracks\"></p>\n      <h3 id=\"grid-auto-flow\">grid-auto-flow</h3>\n      <p>如果你存在没有显示指明放置在网格上的 grid item，则自动放置算法会自动放置这些项目。 而该属性则用于控制自动布局算法的工作方式。</p>\n      <p>值：</p>\n      <ul>\n        <li>row - 告诉自动布局算法依次填充每行，根据需要添加新行</li>\n        <li>column - 告诉自动布局算法依次填充每列，根据需要添加新列</li>\n        <li>dense - 告诉自动布局算法，如果后面出现较小的 grid item，则尝试在网格中填充空洞</li>\n      </ul>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">grid-auto-flow</span>: row | column | row dense | column dense\n}\n</code></pre>\n      <p>需要注意的是，<code>dense</code> 可能导致您的 grid item 乱序。</p>\n      <p>举例， 考虑如下 HTML：</p>\n      <pre><code class=\"lang-html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">section</span> <span\n        class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"container\"</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span\n    class=\"hljs-string\">\"item-a\"</span>&gt;</span>item-a<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span\n    class=\"hljs-string\">\"item-b\"</span>&gt;</span>item-b<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span\n    class=\"hljs-string\">\"item-c\"</span>&gt;</span>item-c<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span\n    class=\"hljs-string\">\"item-d\"</span>&gt;</span>item-d<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span\n    class=\"hljs-string\">\"item-e\"</span>&gt;</span>item-e<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">section</span>&gt;</span>\n</code></pre>\n      <p>你定义一个有5列和2行的网格，并将 grid-auto-flow 设置为 row（这也是默认值）：</p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">display</span>: grid;\n  <span class=\"hljs-attribute\">grid-template-columns</span>: <span class=\"hljs-number\">60px</span> <span\n          class=\"hljs-number\">60px</span> <span class=\"hljs-number\">60px</span> <span\n          class=\"hljs-number\">60px</span> <span class=\"hljs-number\">60px</span>;\n  <span class=\"hljs-attribute\">grid-template-rows</span>: <span class=\"hljs-number\">30px</span> <span\n          class=\"hljs-number\">30px</span>;\n  <span class=\"hljs-attribute\">grid-auto-flow</span>: row;\n}\n</code></pre>\n      <p>当把 grid item 放在网格上时，你只把其中两个设置了固定的位置：</p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.item-a</span> {\n  <span class=\"hljs-attribute\">grid-column</span>: <span class=\"hljs-number\">1</span>;\n  <span class=\"hljs-attribute\">grid-row</span>: <span class=\"hljs-number\">1</span> / <span class=\"hljs-number\">3</span>;\n}\n<span class=\"hljs-selector-class\">.item-e</span> {\n  <span class=\"hljs-attribute\">grid-column</span>: <span class=\"hljs-number\">5</span>;\n  <span class=\"hljs-attribute\">grid-row</span>: <span class=\"hljs-number\">1</span> / <span class=\"hljs-number\">3</span>;\n}\n</code></pre>\n      <p>因为我们将 grid-auto-flow 设置为row，所以我们的grid就像这样。 注意观察我们没有做设置的三个项目（item-b，item-c和item-d）是如何在剩余的行水平摆放位置的：</p>\n      <p><img src=\"https://cloud.hunger-valley.com/18-1-12/92242678.jpg\" alt=\"Example of grid-auto-flow set to row\"></p>\n      <p>如果我们将 grid-auto-flow 设置为 column，则 item-b，item-c 和 item-d 以列的顺序上下摆放：</p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">display</span>: grid;\n  <span class=\"hljs-attribute\">grid-template-columns</span>: <span class=\"hljs-number\">60px</span> <span\n          class=\"hljs-number\">60px</span> <span class=\"hljs-number\">60px</span> <span\n          class=\"hljs-number\">60px</span> <span class=\"hljs-number\">60px</span>;\n  <span class=\"hljs-attribute\">grid-template-rows</span>: <span class=\"hljs-number\">30px</span> <span\n          class=\"hljs-number\">30px</span>;\n  <span class=\"hljs-attribute\">grid-auto-flow</span>: column;\n}\n</code></pre>\n      <p><img src=\"https://cloud.hunger-valley.com/18-1-12/55339887.jpg\" alt=\"Example of grid-auto-flow set to column\">\n      </p>\n      <h3 id=\"grid\">grid</h3>\n      <p>\n        在单个属性中设置所有以下属性的简写：grid-template-rows，grid-template-columns，grid-template-areas，grid-auto-rows，grid-auto-columns和grid-auto-flow。\n        它同时也将 sets grid-column-gap 和 grid-row-gap 设置为它们的初始值，即使它们不能被此属性显示设置。</p>\n      <p>值：</p>\n      <ul>\n        <li>none - 将所有子属性设置为其初始值</li>\n        <li><code>&lt;grid-template-rows&gt;</code> / <code>&lt;grid-template-columns&gt;</code> - 将 grid-template-rows\n          和 grid-template-columns 分别设置为指定值，将所有其他子属性设置为其初始值\n        </li>\n        <li><code>&lt;grid-auto-flow&gt;</code> [<code>&lt;grid-auto-rows&gt;</code> [ /\n          <code>&lt;grid-auto-columns&gt;</code>] ] - 接受所有与grid-auto-flow，grid-auto-rows和grid-auto-columns相同的值。\n          如果省略grid-auto-columns，则将其设置为为grid-auto-rows指定的值。 如果两者都被省略，则它们被设置为它们的初始值\n        </li>\n      </ul>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.container</span> {\n    <span class=\"hljs-attribute\">grid</span>: none | &lt;grid-template-rows&gt; / &lt;grid-template-columns&gt; | &lt;grid-auto-flow&gt; [&lt;grid-auto-rows&gt; [/ &lt;grid-auto-columns&gt;]];\n}\n</code></pre>\n      <p>举例：</p>\n      <p>以下代码写法等价</p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">grid</span>: <span class=\"hljs-number\">200px</span> auto / <span\n          class=\"hljs-number\">1</span>fr auto <span class=\"hljs-number\">1</span>fr;\n}\n<span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">grid-template-rows</span>: <span class=\"hljs-number\">200px</span> auto;\n  <span class=\"hljs-attribute\">grid-template-columns</span>: <span class=\"hljs-number\">1</span>fr auto <span\n          class=\"hljs-number\">1</span>fr;\n  <span class=\"hljs-attribute\">grid-template-areas</span>: none;\n}\n</code></pre>\n      <p>以下代码写法等价</p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">grid</span>: column <span class=\"hljs-number\">1</span>fr / auto;\n}\n<span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">grid-auto-flow</span>: column;\n  <span class=\"hljs-attribute\">grid-auto-rows</span>: <span class=\"hljs-number\">1</span>fr;\n  <span class=\"hljs-attribute\">grid-auto-columns</span>: auto;\n}\n</code></pre>\n      <p>它也可用使用一个更复杂但相当方便的语法来一次设置所有内容。 你可以指定 grid-template-areas、grid-template-rows 以及\n        grid-template-columns，并将所有其他子属性设置为其初始值。 你现在所做的是在其网格区域内，指定网格线名称和内联轨道大小。 可以看下面的例子：</p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">grid</span>: [row1-start] <span class=\"hljs-string\">\"header header header\"</span> <span\n          class=\"hljs-number\">1</span>fr [row1-end]\n        [row2-start] <span class=\"hljs-string\">\"footer footer footer\"</span> <span class=\"hljs-number\">25px</span> [row2-end]\n        / auto <span class=\"hljs-number\">50px</span> auto;\n}\n</code></pre>\n      <p>上述代码等价于</p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">grid-template-areas</span>:\n    <span class=\"hljs-string\">\"header header header\"</span>\n    <span class=\"hljs-string\">\"footer footer footer\"</span>;\n  <span class=\"hljs-attribute\">grid-template-rows</span>: [row1-start] <span class=\"hljs-number\">1</span>fr [row1-end row2-start] <span\n          class=\"hljs-number\">25px</span> [row2-end];\n  <span class=\"hljs-attribute\">grid-template-columns</span>: auto <span class=\"hljs-number\">50px</span> auto;\n}\n</code></pre>\n      <h2 id=\"孩子grid-items的属性\">孩子(Grid Items)的属性</h2>\n      <h3 id=\"grid-column-start--grid-column-end--grid-row-start-grid-row-end\">grid-column-start / grid-column-end /\n        grid-row-start /grid-row-end</h3>\n      <p>使用特定的网格线确定 grid item 在网格内的位置。grid-column-start/grid-row-start 属性表示grid\n        item的网格线的起始位置，grid-column-end/grid-row-end属性表示网格项的网格线的终止位置。</p>\n      <p>值：</p>\n      <ul>\n        <li><code>&lt;line&gt;</code>: 可以是一个数字来指代相应编号的网格线，也可使用名称指代相应命名的网格线</li>\n        <li><code>span &lt;number&gt;</code>: 网格项将跨越指定数量的网格轨道</li>\n        <li><code>span &lt;name&gt;</code>: 网格项将跨越一些轨道，直到碰到指定命名的网格线</li>\n        <li>auto: 自动布局， 或者自动跨越， 或者跨越一个默认的轨道</li>\n      </ul>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.item</span> {\n  <span class=\"hljs-attribute\">grid-column-start</span>: &lt;number&gt; | &lt;name&gt; | span &lt;number&gt; | span &lt;name&gt; | auto\n  grid-column-end: &lt;number&gt; | &lt;name&gt; | span &lt;number&gt; | span &lt;name&gt; | auto\n  grid-row-start: &lt;number&gt; | &lt;name&gt; | span &lt;number&gt; | span &lt;name&gt; | auto\n  grid-row-end: &lt;number&gt; | &lt;name&gt; | span &lt;number&gt; | span &lt;name&gt; | auto\n}\n</code></pre>\n      <p>举例：</p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.item-a</span> {\n  <span class=\"hljs-attribute\">grid-column-start</span>: <span class=\"hljs-number\">2</span>;\n  <span class=\"hljs-attribute\">grid-column-end</span>: five;\n  <span class=\"hljs-attribute\">grid-row-start</span>: row1-start\n  grid-row-end: <span class=\"hljs-number\">3</span>\n}\n</code></pre>\n      <p><img src=\"https://cloud.hunger-valley.com/18-1-12/8301648.jpg\" alt=\"Example of grid-row/column-start/end\"></p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.item-b</span> {\n  <span class=\"hljs-attribute\">grid-column-start</span>: <span class=\"hljs-number\">1</span>;\n  <span class=\"hljs-attribute\">grid-column-end</span>: span col4-start;\n  <span class=\"hljs-attribute\">grid-row-start</span>: <span class=\"hljs-number\">2</span>\n  grid-row-end: span <span class=\"hljs-number\">2</span>\n}\n</code></pre>\n      <p><img src=\"https://cloud.hunger-valley.com/18-1-12/35742447.jpg\" alt=\"Example of grid-row/column-start/end\"></p>\n      <p>如果没有声明 grid-column-end / grid-row-end，默认情况下，该网格项将跨越1个轨道。</p>\n      <p>网格项可以相互重叠。 您可以使用z-index来控制它们的堆叠顺序。</p>\n      <h3 id=\"grid-column--grid-row\">grid-column / grid-row</h3>\n      <p>grid-column-start + grid-column-end, 和 grid-row-start + grid-row-end 的简写形式。</p>\n      <p>值：</p>\n      <ul>\n        <li><code>&lt;start-line&gt;</code> / <code>&lt;end-line&gt;</code> - 每个值的用法都和属性分开写时的用法一样</li>\n      </ul>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.item</span> {\n  <span class=\"hljs-attribute\">grid-column</span>: &lt;start-line&gt; / &lt;end-line&gt; | &lt;start-line&gt; / span &lt;value&gt;;\n  <span class=\"hljs-attribute\">grid-row</span>: &lt;start-line&gt; / &lt;end-line&gt; | &lt;start-line&gt; / span &lt;value&gt;;\n}\n</code></pre>\n      <p>举例：</p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.item-c</span> {\n  <span class=\"hljs-attribute\">grid-column</span>: <span class=\"hljs-number\">3</span> / span <span\n          class=\"hljs-number\">2</span>;\n  <span class=\"hljs-attribute\">grid-row</span>: third-line / <span class=\"hljs-number\">4</span>;\n}\n</code></pre>\n      <p><img src=\"https://cloud.hunger-valley.com/18-1-12/95036015.jpg\" alt=\"Example of grid-column/grid-row\"></p>\n      <p>如果没有指定结束行值，则该网格项默认跨越1个轨道。</p>\n      <h3 id=\"grid-area\">grid-area</h3>\n      <p>给 grid item 进行命名以便于使用 grid-template-areas 属性创建模板时来进行引用。另外也可以做为 grid-row-start + grid-column-start +\n        grid-row-end + grid-column-end 的简写形式。</p>\n      <p>值：</p>\n      <ul>\n        <li><code>&lt;name&gt;</code> - 你的命名</li>\n        <li><code>&lt;row-start&gt;</code> / <code>&lt;column-start&gt;</code> / <code>&lt;row-end&gt;</code> / <code>&lt;column-end&gt;</code>\n          - 可以是数字，也可以是网格线的名字\n        </li>\n      </ul>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.item</span> {\n  <span class=\"hljs-attribute\">grid-area</span>: &lt;name&gt; | &lt;row-start&gt; / &lt;column-start&gt; / &lt;row-end&gt; / &lt;column-end&gt;;\n}\n</code></pre>\n      <p>举例:</p>\n      <p>给一个网格项命名</p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.item-d</span> {\n  <span class=\"hljs-attribute\">grid-area</span>: header\n}\n</code></pre>\n      <p>作为 grid-row-start + grid-column-start + grid-row-end + grid-column-end 的简写:</p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.item-d</span> {\n  <span class=\"hljs-attribute\">grid-area</span>: <span class=\"hljs-number\">1</span> / col4-start / last-line / <span\n          class=\"hljs-number\">6</span>\n}\n</code></pre>\n      <p><img src=\"https://cloud.hunger-valley.com/18-1-12/37070111.jpg\" alt=\"Example of grid-area\"></p>\n      <h3 id=\"justify-self\">justify-self</h3>\n      <p>沿着行轴对齐grid item 里的内容（与之对应的是 align-self, 即沿列轴对齐）。 此属性对单个网格项内的内容生效。</p>\n      <p>值：</p>\n      <ul>\n        <li>start - 将内容对齐到网格区域的左端</li>\n        <li>end - 将内容对齐到网格区域的右端</li>\n        <li>center - 将内容对齐到网格区域的中间</li>\n        <li>stretch - 填充网格区域的宽度 (这是默认值)</li>\n      </ul>\n      <p>举例：</p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.item-a</span> {\n  <span class=\"hljs-attribute\">justify-self</span>: start;\n}\n</code></pre>\n      <p><img src=\"https://cloud.hunger-valley.com/18-1-12/53670315.jpg\" alt=\"Example of justify-self set to start\"></p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.item-a</span> {\n  <span class=\"hljs-attribute\">justify-self</span>: end;\n}\n</code></pre>\n      <p><img src=\"https://cloud.hunger-valley.com/18-1-12/15608697.jpg\" alt=\"Example of justify-self set to end\"></p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.item-a</span> {\n  <span class=\"hljs-attribute\">justify-self</span>: center;\n}\n</code></pre>\n      <p><img src=\"https://cloud.hunger-valley.com/18-1-12/42777942.jpg\" alt=\"Example of justify-self set to center\">\n      </p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.item-a</span> {\n  <span class=\"hljs-attribute\">justify-self</span>: stretch;\n}\n</code></pre>\n      <p><img src=\"https://cloud.hunger-valley.com/18-1-12/42754838.jpg\" alt=\"Example of justify-self set to stretch\">\n      </p>\n      <p>要为网格中的所有grid items 设置对齐方式，也可以通过 justify-items 属性在网格容器上设置此行为。</p>\n      <h3 id=\"align-self\">align-self</h3>\n      <p>沿着列轴对齐grid item 里的内容（与之对应的是 justify-self, 即沿行轴对齐）。 此属性对单个网格项内的内容生效。</p>\n      <p>值：</p>\n      <ul>\n        <li>start - 将内容对齐到网格区域的顶部</li>\n        <li>end - 将内容对齐到网格区域的底部</li>\n        <li>center - 将内容对齐到网格区域的中间</li>\n        <li>stretch - 填充网格区域的高度 (这是默认值)</li>\n      </ul>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.item</span> {\n  <span class=\"hljs-attribute\">align-self</span>: start | end | center | stretch;\n}\n</code></pre>\n      <p>举例:</p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.item-a</span> {\n  <span class=\"hljs-attribute\">align-self</span>: start;\n}\n</code></pre>\n      <p><img src=\"https://cloud.hunger-valley.com/18-1-12/67517511.jpg\" alt=\"Example of align-self set to start\"></p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.item-a</span> {\n  <span class=\"hljs-attribute\">align-self</span>: end;\n}\n</code></pre>\n      <p><img src=\"https://cloud.hunger-valley.com/18-1-12/9140938.jpg\" alt=\"Example of align-self set to end\"></p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.item-a</span> {\n  <span class=\"hljs-attribute\">align-self</span>: center;\n}\n</code></pre>\n      <p><img src=\"https://cloud.hunger-valley.com/18-1-12/38240821.jpg\" alt=\"Example of align-self set to center\"></p>\n      <pre><code class=\"lang-css\"><span class=\"hljs-selector-class\">.item-a</span> {\n  <span class=\"hljs-attribute\">align-self</span>: stretch;\n}\n</code></pre>\n      <p><img src=\"https://cloud.hunger-valley.com/18-1-12/84502177.jpg\" alt=\"Example of align-self set to stretch\"></p>\n      <p>要为网格中的所有grid items 统一设置对齐方式，也可以通过 align-items 属性在网格容器上设置此行为。</p>\n\n\n    </section>\n  </div>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        msg: 'Welcome to Your Vue.js App'\n      }\n    }\n  }\n</script>\n\n<style lang=\"less\" >\n  @import \"../../assets/base.less\";\n  @import \"../../assets/article.less\";\n\n  #detail {\n    .user-info {\n      display: grid;\n      grid: auto auto / 80px 1fr;\n\n      margin-top: 30px;\n      padding-bottom: 20px;\n      border-bottom: 1px solid #ebebeb;\n\n      .avatar {\n        grid-column: 1;\n        grid-row: 1 / span 2;\n\n        width: 60px;\n        height: 60px;\n        border-radius: 50%;\n      }\n\n      h3 {\n        grid-column: 2;\n        grid-row: 1;\n\n        margin: 5px 0;\n\n      }\n\n      p {\n        grid-column: 2;\n        grid-row: 2;\n\n        margin-top: 0;\n        font-size: 12px;\n        color: @textLighterColor;\n\n        a {\n          color: @themeColor;\n          text-decoration: none;\n        }\n      }\n    }\n\n    .article {\n      padding: 30px 0;\n    }\n\n  }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/pages/Detail/template.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"detail\"}},[_c('section',{staticClass:\"user-info\"},[_c('img',{staticClass:\"avatar\",attrs:{\"src\":\"http://cn.gravatar.com/avatar/1?s=128&d=identicon\",\"alt\":\"\"}}),_vm._v(\" \"),_c('h3',[_vm._v(\"前端异步大揭秘\")]),_vm._v(\" \"),_c('p',[_c('router-link',{attrs:{\"to\":\"/user\"}},[_vm._v(\"若愚\")]),_vm._v(\"\\n        发布于3天前\\n      \")],1)]),_vm._v(\" \"),_vm._m(0)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticClass:\"article\"},[_c('h1',{attrs:{\"id\":\"css-网格布局学习指南\"}},[_vm._v(\"CSS 网格布局学习指南\")]),_vm._v(\" \"),_c('p',[_vm._v(\"CSS 网格布局(Grid Layout) 是CSS中最强大的布局系统。 这是一个二维系统，这意味着它可以同时处理列和行，不像 \"),_c('a',{attrs:{\"href\":\"https://css-tricks.com/snippets/css/a-guide-to-flexbox/\",\"target\":\"_blank\"}},[_vm._v(\"flexbox\")]),_vm._v(\" 那样主要是一维系统。\\n        你可以通过将CSS规则应用于父元素（成为网格容器）和该元素的子元素（网格元素），来使用网格布局。\")]),_vm._v(\" \"),_c('blockquote',[_c('p',[_c('a',{attrs:{\"href\":\"https://css-tricks.com/snippets/css/complete-guide-grid/\",\"target\":\"_blank\"}},[_vm._v(\"本文\")]),_vm._v(\"出自于 \"),_c('a',{attrs:{\"href\":\"http://chris.house/blog/a-complete-guide-css-grid-layout/\",\"target\":\"_blank\"}},[_vm._v(\"Chris House\")]),_vm._v(\" 的个人博客，由\"),_c('a',{attrs:{\"href\":\"https://jirengu.com\",\"target\":\"_blank\"}},[_vm._v(\"饥人谷\")]),_vm._v(\" \"),_c('a',{attrs:{\"href\":\"https://www.zhihu.com/people/jirengu-ruo-yu\",\"target\":\"_blank\"}},[_vm._v(\"若愚老师\")]),_vm._v(\"翻译\")])]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"引言\"}},[_vm._v(\"引言\")]),_vm._v(\" \"),_c('p',[_vm._v(\"CSS网格布局（又名“网格”）是一个二维的基于网格的布局系统，其目的只在于完全改变我们设计基于网格的用户界面的方式。 CSS一直用来布局网页，但一直都不完美。 一开始我们使用table\\n        做布局，然后转向浮动、定位以及inline-block，但所有这些方法本质上都是 Hack 的方式，并且遗漏了很多重要的功能（例如垂直居中）。\\n        Flexbox的出现在一定程度上解决了这个问题，但是它的目的是为了更简单的一维布局，而不是复杂的二维布局（Flexbox和Grid实际上一起工作得很好）。 只要我们一直在制作网站，我们就一直在为解决布局问题不断探索，\\n        而Grid是第一个专门为解决布局问题而生的CSS模块。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"有两个东西，启发我写这篇指南。 第一个是雷切尔·安德鲁（Rachel Andrew）的书\"),_c('a',{attrs:{\"href\":\"http://abookapart.com/products/get-ready-for-css-grid-layout\",\"target\":\"_blank\"}},[_vm._v(\"为CSS Grid布局准备\")]),_vm._v(\"。\\n        这本书对网格布局做了彻底、清晰的介绍，也是是整篇文章的基础，我强烈建议你购买并阅读他的书。 我的另一个重要灵感是Chris Coyier的\"),_c('a',{attrs:{\"href\":\"https://css-tricks.com/snippets/css/a-guide-to-flexbox/\",\"target\":\"_blank\"}},[_vm._v(\"Flexbox完全指南\")]),_vm._v(\"，当需要查阅 flexbox\\n        的一切资料时我就会找这篇文章。 这篇文章帮助了很多人学习 Flex 布局，也是 Google 上搜索“flexbox”关键字排名第一的文章。你会发现他的文章和我的很多相似之处，有最好的范例在那放着为什么咱不偷师学着写呢？\\n      \")]),_vm._v(\" \"),_c('p',[_vm._v(\"本指南的目的是介绍网格概念，因为它们存在于最新版本的规范中。 因此我不会覆盖过时的IE语法，而且随着规范的成熟，我会尽最大努力保存更新本指南。\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"基础知识以及浏览器支持情况\"}},[_vm._v(\"基础知识以及浏览器支持情况\")]),_vm._v(\" \"),_c('p',[_vm._v(\"\\n        一开始你需要使用\"),_c('code',[_vm._v(\"display：grid\")]),_vm._v(\"把容器元素定义为一个网格，使用\"),_c('code',[_vm._v(\"grid-template-columns\")]),_vm._v(\"和\"),_c('code',[_vm._v(\"grid-template-rows\")]),_vm._v(\"设置列和行大小，然后使用\"),_c('code',[_vm._v(\"grid-column\")]),_vm._v(\"\\n        和 \"),_c('code',[_vm._v(\"grid-row\")]),_vm._v(\"把它的子元素放入网格。 与flexbox类似，网格子元素的原始顺序不重要。 你的可以在 CSS 里以任意顺序放置它们，这使得使用媒体查询重新排列网格变得非常容易。\\n        想象一下，我们需要定义整个页面的布局，然后为了适应不同的屏幕宽度完全重新排列，我们只需要几行CSS就能实现这个需求。 网格是有史以来最强大的CSS模块之一。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"截至2017年3月，许多浏览器都提供了原生的、不加前缀的对CSS Grid的支持，比如 Chrome（包括Android），Firefox，Safari（包括iOS）和Opera。 另一方面，Internet\\n        Explorer 10和11支持它，但需要使用过时的语法。 Edge浏览器已经宣布将支持标准的Grid语法，但暂未支持。\")]),_vm._v(\" \"),_c('blockquote',[_c('p',[_vm._v(\"浏览器支持的详细数据可在\"),_c('a',{attrs:{\"href\":\"http://caniuse.com/#feat=css-grid\",\"target\":\"_blank\"}},[_vm._v(\"Caniuse\")]),_vm._v(\"查看。其中里面的数字表示该版本以上的浏览器支持Grid。\\n        \")])]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"桌面浏览器\"}},[_vm._v(\"桌面浏览器\")]),_vm._v(\" \"),_c('table',[_c('thead',[_c('tr',[_c('th',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"Chrome\")]),_vm._v(\" \"),_c('th',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"Opera\")]),_vm._v(\" \"),_c('th',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"Firefox\")]),_vm._v(\" \"),_c('th',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"IE\")]),_vm._v(\" \"),_c('th',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"Edge\")]),_vm._v(\" \"),_c('th',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"Safari\")])])]),_vm._v(\" \"),_c('tbody',[_c('tr',[_c('td',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"57\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"44\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"52\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"11*\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"16\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"10.1\")])])])]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"移动端--平板\"}},[_vm._v(\"移动端 / 平板\")]),_vm._v(\" \"),_c('table',[_c('thead',[_c('tr',[_c('th',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"iOS Safari\")]),_vm._v(\" \"),_c('th',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"Opera Mobile\")]),_vm._v(\" \"),_c('th',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"Opera Mini\")]),_vm._v(\" \"),_c('th',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"Android\")]),_vm._v(\" \"),_c('th',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"Android Chrome\")]),_vm._v(\" \"),_c('th',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"Android Firefox\")])])]),_vm._v(\" \"),_c('tbody',[_c('tr',[_c('td',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"10.3\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"No\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"No\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"62\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"62\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"57\")])])])]),_vm._v(\" \"),_c('p',[_vm._v(\"除了微软之外，浏览器制造商在 Grid 规范完全落地以前似乎并没有放手让 Gird 野生也长的打算。 这是一件好事，这意味着我们不需要再去学习各种浏览器兼容版本的旧语法。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在生产环境中使用Grid只是时间问题，但现在是我们该学习的时候了。\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"重要术语\"}},[_vm._v(\"重要术语\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在深入了解网格的概念之前，理解术语是很重要的。 由于这里所涉及的术语在概念上都是相似的，如果不先记住它们在网格规范中定义的含义，则很容易将它们彼此混淆。 但是不用太担心，这些术语并不多。\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"grid-container\"}},[_vm._v(\"Grid Container\")]),_vm._v(\" \"),_c('p',[_vm._v(\"设置了 \"),_c('code',[_vm._v(\"display: gird\")]),_vm._v(\" 的元素。 这是所有 grid item 的直接父项。 在下面的例子中，\"),_c('code',[_vm._v(\".container\")]),_vm._v(\" 就是是 grid container。\\n      \")]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-html\"},[_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"<\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"div\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-attr\"},[_vm._v(\"class\")]),_vm._v(\"=\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"container\\\"\")]),_vm._v(\">\")]),_vm._v(\"\\n  \"),_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"<\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"div\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-attr\"},[_vm._v(\"class\")]),_vm._v(\"=\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"item item-1\\\"\")]),_vm._v(\">\")]),_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"</\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"div\")]),_vm._v(\">\")]),_vm._v(\"\\n  \"),_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"<\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"div\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-attr\"},[_vm._v(\"class\")]),_vm._v(\"=\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"item item-2\\\"\")]),_vm._v(\">\")]),_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"</\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"div\")]),_vm._v(\">\")]),_vm._v(\"\\n  \"),_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"<\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"div\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-attr\"},[_vm._v(\"class\")]),_vm._v(\"=\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"item item-3\\\"\")]),_vm._v(\">\")]),_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"</\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"div\")]),_vm._v(\">\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"</\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"div\")]),_vm._v(\">\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"grid-item\"}},[_vm._v(\"Grid Item\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Grid 容器的孩子（直接子元素）。下面的 \"),_c('code',[_vm._v(\".item\")]),_vm._v(\" 元素就是 grid item，但 \"),_c('code',[_vm._v(\".sub-item\")]),_vm._v(\"不是。\")]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-html\"},[_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"<\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"div\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-attr\"},[_vm._v(\"class\")]),_vm._v(\"=\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"container\\\"\")]),_vm._v(\">\")]),_vm._v(\"\\n  \"),_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"<\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"div\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-attr\"},[_vm._v(\"class\")]),_vm._v(\"=\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"item\\\"\")]),_vm._v(\">\")]),_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"</\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"div\")]),_vm._v(\">\")]),_vm._v(\"\\n  \"),_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"<\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"div\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-attr\"},[_vm._v(\"class\")]),_vm._v(\"=\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"item\\\"\")]),_vm._v(\">\")]),_vm._v(\"\\n    \"),_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"<\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"p\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-attr\"},[_vm._v(\"class\")]),_vm._v(\"=\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"sub-item\\\"\")]),_vm._v(\">\")]),_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"</\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"p\")]),_vm._v(\">\")]),_vm._v(\"\\n  \"),_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"</\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"div\")]),_vm._v(\">\")]),_vm._v(\"\\n  \"),_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"<\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"div\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-attr\"},[_vm._v(\"class\")]),_vm._v(\"=\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"item\\\"\")]),_vm._v(\">\")]),_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"</\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"div\")]),_vm._v(\">\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"</\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"div\")]),_vm._v(\">\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"grid-line\"}},[_vm._v(\"Grid Line\")]),_vm._v(\" \"),_c('p',[_vm._v(\"这个分界线组成网格结构。 它们既可以是垂直的（“column grid lines”），也可以是水平的（“row grid lines”），并位于行或列的任一侧。 下面例中的黄线就是一个列网格线。\")]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"https://cloud.hunger-valley.com/18-1-11/48497835.jpg\",\"alt\":\"\"}})]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"grid-track\"}},[_vm._v(\"Grid Track\")]),_vm._v(\" \"),_c('p',[_vm._v(\"两个相邻网格线之间的空间。 你可以把它们想象成网格的列或行。 下面是第二行和第三行网格线之间的网格轨道。\")]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"https://cloud.hunger-valley.com/18-1-11/44840078.jpg\",\"alt\":\"\"}})]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"grid-cell\"}},[_vm._v(\"Grid Cell\")]),_vm._v(\" \"),_c('p',[_vm._v(\"两个相邻的行和两个相邻的列网格线之间的空间。它是网格的一个“单元”。 下面是行网格线1和2之间以及列网格线2和3的网格单元。\")]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"https://cloud.hunger-valley.com/18-1-11/38456584.jpg\",\"alt\":\"\"}})]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"grid-\"}},[_vm._v(\"Grid Area\")]),_vm._v(\" \"),_c('p',[_vm._v(\"四个网格线包围的总空间。 网格区域可以由任意数量的网格单元组成。 下面是行网格线1和3以及列网格线1和3之间的网格区域。\")]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"https://cloud.hunger-valley.com/18-1-11/38612829.jpg\",\"alt\":\"\"}})]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"grid-属性列表\"}},[_vm._v(\"Grid 属性列表\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Grid Container 的全部属性\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"display\")]),_vm._v(\" \"),_c('li',[_vm._v(\"grid-template-columns\")]),_vm._v(\" \"),_c('li',[_vm._v(\"grid-template-rows\")]),_vm._v(\" \"),_c('li',[_vm._v(\"grid-template-areas\")]),_vm._v(\" \"),_c('li',[_vm._v(\"grid-template\")]),_vm._v(\" \"),_c('li',[_vm._v(\"grid-column-gap\")]),_vm._v(\" \"),_c('li',[_vm._v(\"grid-row-gap\")]),_vm._v(\" \"),_c('li',[_vm._v(\"grid-gap\")]),_vm._v(\" \"),_c('li',[_vm._v(\"justify-items\")]),_vm._v(\" \"),_c('li',[_vm._v(\"align-items\")]),_vm._v(\" \"),_c('li',[_vm._v(\"justify-content\")]),_vm._v(\" \"),_c('li',[_vm._v(\"align-content\")]),_vm._v(\" \"),_c('li',[_vm._v(\"grid-auto-columns\")]),_vm._v(\" \"),_c('li',[_vm._v(\"grid-auto-rows\")]),_vm._v(\" \"),_c('li',[_vm._v(\"grid-auto-flow\")]),_vm._v(\" \"),_c('li',[_vm._v(\"grid\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"Grid Items 的全部属性\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"grid-column-start\")]),_vm._v(\" \"),_c('li',[_vm._v(\"grid-column-end\")]),_vm._v(\" \"),_c('li',[_vm._v(\"grid-row-start\")]),_vm._v(\" \"),_c('li',[_vm._v(\"grid-row-end\")]),_vm._v(\" \"),_c('li',[_vm._v(\"grid-column\")]),_vm._v(\" \"),_c('li',[_vm._v(\"grid-row\")]),_vm._v(\" \"),_c('li',[_vm._v(\"grid-area\")]),_vm._v(\" \"),_c('li',[_vm._v(\"justify-self\")]),_vm._v(\" \"),_c('li',[_vm._v(\"align-self\")])]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"父容器grid-container的属性\"}},[_vm._v(\"父容器(Grid Container)的属性\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"display\"}},[_vm._v(\"display\")]),_vm._v(\" \"),_c('p',[_vm._v(\"将元素定义为 grid contaienr，并为其内容建立新的网格格式化上下文(grid formatting context)。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"值:\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('strong',[_vm._v(\"grid\")]),_vm._v(\" - 生成一个块级(block-level)网格\")]),_vm._v(\" \"),_c('li',[_c('strong',[_vm._v(\"inline-grid\")]),_vm._v(\" - 生成一个行级(inline-level)网格\")]),_vm._v(\" \"),_c('li',[_c('strong',[_vm._v(\"subgrid\")]),_vm._v(\" - 如果你的 grid container 本身就是一个 grid\\n          item（即,嵌套网格），你可以使用这个属性来表示你想从它的父节点获取它的行/列的大小，而不是指定它自己的大小。\\n        \")])]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"display\")]),_vm._v(\": grid | inline-grid | subgrid;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"注意：\"),_c('code',[_vm._v(\"column\")]),_vm._v(\", \"),_c('code',[_vm._v(\"float\")]),_vm._v(\", \"),_c('code',[_vm._v(\"clear\")]),_vm._v(\", 以及 \"),_c('code',[_vm._v(\"vertical-align\")]),_vm._v(\" 对一个 grid\\n        container 没有影响\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"grid-template-columns--grid-template-rows\"}},[_vm._v(\"grid-template-columns / grid-template-rows\")]),_vm._v(\" \"),_c('p',[_vm._v(\"使用以空格分隔的多个值来定义网格的列和行。这些值表示轨道大小(track size)，它们之间的空格代表表格线(grid line)。\")]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-template-columns\")]),_vm._v(\": <track-size> ... | <line-name> <track-size> ...;\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-template-rows\")]),_vm._v(\": <track-size> ... | <line-name> <track-size> ...;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"例子:\")]),_vm._v(\" \"),_c('p',[_vm._v(\"(如果未显示的给网格线命名)，轨道值之间仅仅有空格时，网格线会被自动分配数字名称：\")]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-template-columns\")]),_vm._v(\": \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"40px\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"50px\")]),_vm._v(\" auto \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"50px\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"40px\")]),_vm._v(\";\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-template-rows\")]),_vm._v(\": \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"25%\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"100px\")]),_vm._v(\" auto;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"https://cloud.hunger-valley.com/18-1-11/55281623.jpg\",\"alt\":\"\"}})]),_vm._v(\" \"),_c('p',[_vm._v(\"但你可以给网格线指定确切的命名。 注意中括号里的网格线命名语法：\")]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-template-columns\")]),_vm._v(\": [first] \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"40px\")]),_vm._v(\" [line2] \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"50px\")]),_vm._v(\" [line3] auto [col4-start] \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"50px\")]),_vm._v(\" [five] \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"40px\")]),_vm._v(\" [end];\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-template-rows\")]),_vm._v(\": [row1-start] \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"25%\")]),_vm._v(\" [row1-end] \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"100px\")]),_vm._v(\" [third-line] auto [last-line];\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"https://cloud.hunger-valley.com/18-1-11/1314820.jpg\",\"alt\":\"\"}})]),_vm._v(\" \"),_c('p',[_vm._v(\"需要注意的是，一个网格线可以有不止一个名字。例如，这里第2条网格线有两个名字：row1-end 和 row2-start：\")]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-template-rows\")]),_vm._v(\": [row1-start] \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"25%\")]),_vm._v(\" [row1-end row2-start] \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"25%\")]),_vm._v(\" [row2-end];\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"如果你的定义中包含重复的部分，则可以使用\"),_c('code',[_vm._v(\"repeat()\")]),_vm._v(\" 符号来简化写法：\")]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-template-columns\")]),_vm._v(\": \"),_c('span',{staticClass:\"hljs-built_in\"},[_vm._v(\"repeat\")]),_vm._v(\"(3, 20px [col-start]) \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"5%\")]),_vm._v(\";\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"上面的写法和下面等价：\")]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-template-columns\")]),_vm._v(\": \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"20px\")]),_vm._v(\" [col-start] \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"20px\")]),_vm._v(\" [col-start] \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"20px\")]),_vm._v(\" [col-start] \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"5%\")]),_vm._v(\";\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"“fr”单位允许您将轨道大小设置为网格容器自由空间的一部分。 例如，下面的代码会将每个 grid item 为 grid container 宽度的三分之一：\")]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-template-columns\")]),_vm._v(\": \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"1\")]),_vm._v(\"fr \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"1\")]),_vm._v(\"fr \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"1\")]),_vm._v(\"fr;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"自由空间是在排除所有不可伸缩的 grid item 之后计算得到的。 在下面的示例中，fr单位可用的自由空间总量不包括50px:\")]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-template-columns\")]),_vm._v(\": \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"1\")]),_vm._v(\"fr \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"50px\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"1\")]),_vm._v(\"fr \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"1\")]),_vm._v(\"fr;\\n}\\n\")])]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"grid-template-areas\"}},[_vm._v(\"grid-template-areas\")]),_vm._v(\" \"),_c('p',[_vm._v(\"通过引用 \"),_c('code',[_vm._v(\"grid-area\")]),_vm._v(\"属性指定的网格区域的名称来定义网格模板。 重复网格区域的名称导致内容扩展到这些单元格。 点号表示一个空单元格。 语法本身提供了网格结构的可视化。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"值：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('code',[_vm._v(\"<grid-area-name>\")]),_vm._v(\" - 使用 grid-area 属性设置的网格区域的名称\")]),_vm._v(\" \"),_c('li',[_c('code',[_vm._v(\".\")]),_vm._v(\" - 点号代表一个空网格单元\")]),_vm._v(\" \"),_c('li',[_c('strong',[_vm._v(\"none\")]),_vm._v(\" - 没有定义网格区域\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"举例：\")]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".item-a\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-area\")]),_vm._v(\": header;\\n}\\n\"),_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".item-b\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-area\")]),_vm._v(\": main;\\n}\\n\"),_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".item-c\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-area\")]),_vm._v(\": sidebar;\\n}\\n\"),_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".item-d\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-area\")]),_vm._v(\": footer;\\n}\\n\\n\"),_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-template-columns\")]),_vm._v(\": \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"50px\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"50px\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"50px\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"50px\")]),_vm._v(\";\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-template-rows\")]),_vm._v(\": auto;\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-template-areas\")]),_vm._v(\":\\n    \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"header header header header\\\"\")]),_vm._v(\"\\n    \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"main main . sidebar\\\"\")]),_vm._v(\"\\n    \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"footer footer footer footer\\\"\")]),_vm._v(\";\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"这将创建一个四列宽三行高的网格。 整个第一行将由 \"),_c('strong',[_vm._v(\"header\")]),_vm._v(\" 区域组成。 中间一行将由两个 \"),_c('strong',[_vm._v(\"main\")]),_vm._v(\" 区域、一个空单元格和一个 \"),_c('strong',[_vm._v(\"sidebar\")]),_vm._v(\"\\n        区域组成。 最后一行是\"),_c('strong',[_vm._v(\"footer\")]),_vm._v(\"区域组成。\")]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"https://cloud.hunger-valley.com/18-1-11/45883436.jpg\",\"alt\":\"\"}})]),_vm._v(\" \"),_c('p',[_vm._v(\"你的声明中的每一行都需要有相同数量的单元格。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"您可以使用任意数量的相邻的\"),_c('code',[_vm._v(\".\")]),_vm._v(\"来声明单个空单元格。 只要这些点号之间没有空格，他们就代表了一个单一的单元格。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"需要注意的是你不是在用这个语法命名网格线，而是在命名区域。 当你使用这种语法时，区域两端的网格线实际上是自动命名的。 比如，如果网格区域的名称是foo，那么区域的起始的行网格线和列网格线名称是 foo-\"),_c('strong',[_vm._v(\"start\")]),_vm._v(\"，并且区域终点的行网格线和列网格线名称是\\n        foo-\"),_c('strong',[_vm._v(\"end\")]),_vm._v(\"。 这意味着某些网格线可能有多个名称，比如上面的例子中最左边的一条网格线有三个名字：header-start，main-start 和 footer-start。\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"grid-template\"}},[_vm._v(\"grid-template\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在单个声明中定义 grid-template-rows、grid-template-columns、grid-template-areas 的简写。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"值：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('strong',[_vm._v(\"none\")]),_vm._v(\" - 将三个属性都设置为其初始值\")]),_vm._v(\" \"),_c('li',[_c('strong',[_vm._v(\"subgrid\")]),_vm._v(\" - 把 grid-template-rows 和 grid-template-columns 设置为 subgrid, 并且 grid-template-areas\\n          设置为初始值\\n        \")]),_vm._v(\" \"),_c('li',[_c('code',[_vm._v(\"grid-template-rows\")]),_vm._v(\" / \"),_c('code',[_vm._v(\"<grid-template-columns\")]),_vm._v(\" - 把 grid-template-columns 和\\n          grid-template-rows 设置为指定值, 与此同时, 设置 grid-template-areas 为 none\\n        \")])]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-template\")]),_vm._v(\": none | subgrid | <grid-template-rows> / <grid-template-columns>;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"它也可以使用一个更复杂但相当方便的语法来指定这三个值。 一个例子：\")]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-template\")]),_vm._v(\":\\n    [row1-start] \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"header header header\\\"\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"25px\")]),_vm._v(\" [row1-end]\\n    [row2-start] \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"footer footer footer\\\"\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"25px\")]),_vm._v(\" [row2-end]\\n    / auto \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"50px\")]),_vm._v(\" auto;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"以上等价于：\")]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-template-rows\")]),_vm._v(\": [row1-start] \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"25px\")]),_vm._v(\" [row1-end row2-start] \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"25px\")]),_vm._v(\" [row2-end];\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-template-columns\")]),_vm._v(\": auto \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"50px\")]),_vm._v(\" auto;\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-template-areas\")]),_vm._v(\":\\n    \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"header header header\\\"\")]),_vm._v(\"\\n    \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"footer footer footer\\\"\")]),_vm._v(\";\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"由于 grid-template\\n        不会重置隐式网格属性（\"),_c('code',[_vm._v(\"grid-auto-columns\")]),_vm._v(\"，\"),_c('code',[_vm._v(\"grid-auto-rows\")]),_vm._v(\"和\"),_c('code',[_vm._v(\"grid-auto-flow\")]),_vm._v(\"），而这可能是大多数情况下你想要做的。因此建议使用\"),_c('code',[_vm._v(\"grid\")]),_vm._v(\"属性来代替\"),_c('code',[_vm._v(\"grid-template\")]),_vm._v(\"。\\n      \")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"grid-column-gap--grid-row-gap\"}},[_vm._v(\"grid-column-gap / grid-row-gap\")]),_vm._v(\" \"),_c('p',[_vm._v(\"指定网格线的大小，你可以把它想象为设置列/行之间的间距的宽度。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"值：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('code',[_vm._v(\"line-size\")]),_vm._v(\" - 一个长度值\")])]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-column-gap\")]),_vm._v(\": <line-size>;\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-row-gap\")]),_vm._v(\": <line-size>;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"举例：\")]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-template-columns\")]),_vm._v(\": \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"100px\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"50px\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"100px\")]),_vm._v(\";\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-template-rows\")]),_vm._v(\": \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"80px\")]),_vm._v(\" auto \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"80px\")]),_vm._v(\";\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-column-gap\")]),_vm._v(\": \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"10px\")]),_vm._v(\";\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-row-gap\")]),_vm._v(\": \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"15px\")]),_vm._v(\";\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"https://cloud.hunger-valley.com/18-1-11/406531.jpg\",\"alt\":\"\"}})]),_vm._v(\" \"),_c('p',[_vm._v(\"只能在列/行之间创建缝隙，而不是在外部边缘创建。\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"grid-gap\"}},[_vm._v(\"grid-gap\")]),_vm._v(\" \"),_c('p',[_vm._v(\"grid-row-gap 和 grid-column-gap 的缩写\")]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-gap\")]),_vm._v(\": <grid-row-gap> <grid-column-gap>;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"Example:\")]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-template-columns\")]),_vm._v(\": \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"100px\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"50px\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"100px\")]),_vm._v(\";\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-template-rows\")]),_vm._v(\": \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"80px\")]),_vm._v(\" auto \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"80px\")]),_vm._v(\";\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-gap\")]),_vm._v(\": \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"10px\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"15px\")]),_vm._v(\";\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"如果没有指定 grid-row-gap，则会被设置为与 grid-column-gap 相同的值。\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"justify-items\"}},[_vm._v(\"justify-items\")]),_vm._v(\" \"),_c('p',[_vm._v(\"沿着行轴对齐网格内的内容（与之对应的是 align-items, 即沿着列轴对齐），该值适用于容器内的所有的 grid items。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"值：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('strong',[_vm._v(\"start\")]),_vm._v(\": 内容与网格区域的左端对齐\")]),_vm._v(\" \"),_c('li',[_c('strong',[_vm._v(\"end\")]),_vm._v(\": 内容与网格区域的右端对齐\")]),_vm._v(\" \"),_c('li',[_c('strong',[_vm._v(\"center\")]),_vm._v(\": 内容位于网格区域的中间位置\")]),_vm._v(\" \"),_c('li',[_c('strong',[_vm._v(\"stretch\")]),_vm._v(\": 内容宽度占据整个网格区域空间(这是默认值)\")])]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"justify-items\")]),_vm._v(\": start | end | center | stretch;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"举例：\")]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"justify-items\")]),_vm._v(\": start;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"https://cloud.hunger-valley.com/18-1-11/81852061.jpg\",\"alt\":\"\"}})]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\"{\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"justify-items\")]),_vm._v(\": end;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"https://cloud.hunger-valley.com/18-1-11/57749032.jpg\",\"alt\":\"\"}})]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"justify-items\")]),_vm._v(\": center;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"https://cloud.hunger-valley.com/18-1-11/73568687.jpg\",\"alt\":\"\"}})]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"justify-items\")]),_vm._v(\": stretch;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"https://cloud.hunger-valley.com/18-1-11/81147184.jpg\",\"alt\":\"\"}})]),_vm._v(\" \"),_c('p',[_vm._v(\"也可以通过给单个 grid item 设置\"),_c('code',[_vm._v(\"justify-self\")]),_vm._v(\"属性来达到上述效果。\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"align-items\"}},[_vm._v(\"align-items\")]),_vm._v(\" \"),_c('p',[_vm._v(\"沿着列轴对齐grid item 里的内容（与之对应的是使用 justify-items 设置沿着行轴对齐），该值适用于容器内的所有 grid items。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"值：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('strong',[_vm._v(\"start\")]),_vm._v(\": 内容与网格区域的顶端对齐\")]),_vm._v(\" \"),_c('li',[_c('strong',[_vm._v(\"end\")]),_vm._v(\": 内容与网格区域的底部对齐\")]),_vm._v(\" \"),_c('li',[_c('strong',[_vm._v(\"center\")]),_vm._v(\": 内容位于网格区域的垂直中心位置\")]),_vm._v(\" \"),_c('li',[_c('strong',[_vm._v(\"stretch\")]),_vm._v(\": 内容高度占据整个网格区域空间(这是默认值)\")])]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"align-items\")]),_vm._v(\": start | end | center | stretch;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"举例:\")]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"align-items\")]),_vm._v(\": start;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"https://cloud.hunger-valley.com/18-1-11/31201904.jpg\",\"alt\":\"\"}})]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"align-items\")]),_vm._v(\": end;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"https://cloud.hunger-valley.com/18-1-11/37389909.jpg\",\"alt\":\"\"}})]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"align-items\")]),_vm._v(\": center;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"https://cloud.hunger-valley.com/18-1-11/64308393.jpg\",\"alt\":\"Example of align-items set to center\"}})]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"align-items\")]),_vm._v(\": stretch;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"https://cloud.hunger-valley.com/18-1-11/33767654.jpg\",\"alt\":\"Example of align-items set to stretch\"}})]),_vm._v(\" \"),_c('p',[_vm._v(\"也可以通过给单个 grid item 设置\"),_c('code',[_vm._v(\"align-self\")]),_vm._v(\"属性来达到上述效果。\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"justify-content\"}},[_vm._v(\"justify-content\")]),_vm._v(\" \"),_c('p',[_vm._v(\"有时，网格的总大小可能小于其网格容器的大小。如果你的所有 grid items 都使用像px这样的非弹性单位来设置大小，则可能发生这种情况。此时，你可以设置网格容器内的网格的对齐方式。 此属性沿着行轴对齐网格（与之对应的是\\n        align-content, 沿着列轴对齐）。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"值：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"start - 网格与网格容器的左边对齐\")]),_vm._v(\" \"),_c('li',[_vm._v(\"end - 网格与网格容器的右边对齐\")]),_vm._v(\" \"),_c('li',[_vm._v(\"center - 网格与网格容器的中间对齐\")]),_vm._v(\" \"),_c('li',[_vm._v(\"stretch - 调整g rid item 的大小，让宽度填充整个网格容器\")]),_vm._v(\" \"),_c('li',[_vm._v(\"space-around - 在 grid item 之间设置均等宽度的空白间隙，其外边缘间隙大小为中间空白间隙宽度的一半\")]),_vm._v(\" \"),_c('li',[_vm._v(\"space-between - 在 grid item 之间设置均等宽度空白间隙，其外边缘无间隙\")]),_vm._v(\" \"),_c('li',[_vm._v(\"space-evenly - 在每个 grid item 之间设置均等宽度的空白间隙，包括外边缘\")])]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"justify-content\")]),_vm._v(\": start | end | center | stretch | space-around | space-between | space-evenly;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"举例：\")]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"justify-content\")]),_vm._v(\": start;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"https://cloud.hunger-valley.com/18-1-18/16621438.jpg\",\"alt\":\"Example of justify-content set to start\"}})]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"justify-content\")]),_vm._v(\": end;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"https://cloud.hunger-valley.com/18-1-11/46252522.jpg\",\"alt\":\"Example of justify-content set to end\"}})]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"justify-content\")]),_vm._v(\": center;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"https://cloud.hunger-valley.com/18-1-11/31369605.jpg\",\"alt\":\"Example of justify-content set to center\"}})]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"justify-content\")]),_vm._v(\": stretch;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"https://cloud.hunger-valley.com/18-1-11/65452171.jpg\",\"alt\":\"Example of justify-content set to stretch\"}})]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"justify-content\")]),_vm._v(\": space-around;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"https://cloud.hunger-valley.com/18-1-12/79036314.jpg\",\"alt\":\"Example of justify-content set to space-around\"}})]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"justify-content\")]),_vm._v(\": space-between;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"https://cloud.hunger-valley.com/18-1-12/36148565.jpg\",\"alt\":\"Example of justify-content set to space-between\"}})]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"justify-content\")]),_vm._v(\": space-evenly;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"https://cloud.hunger-valley.com/18-1-12/9095829.jpg\",\"alt\":\"Example of justify-content set to space-evenly\"}})]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"align-content\"}},[_vm._v(\"align-content\")]),_vm._v(\" \"),_c('p',[_vm._v(\"有时，网格的总大小可能小于其网格容器的大小。如果你的所有 grid items 都使用像px这样的非弹性单位来设置大小，则可能发生这种情况。此时，你可以设置网格容器内的网格的对齐方式。 此属性沿着列轴对齐网格（与之对应的是\\n        justify-content, 即沿着行轴对齐）。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"值：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"start - 网格与网格容器的顶部对齐\")]),_vm._v(\" \"),_c('li',[_vm._v(\"end - 网格与网格容器的底部对齐\")]),_vm._v(\" \"),_c('li',[_vm._v(\"center - 网格与网格容器的中间对齐\")]),_vm._v(\" \"),_c('li',[_vm._v(\"stretch - 调整 grid item 的大小，让高度填充整个网格容器\")]),_vm._v(\" \"),_c('li',[_vm._v(\"space-around - 在 grid item 之间设置均等宽度的空白间隙，其外边缘间隙大小为中间空白间隙宽度的一半\")]),_vm._v(\" \"),_c('li',[_vm._v(\"space-between - 在 grid item 之间设置均等宽度空白间隙，其外边缘无间隙\")]),_vm._v(\" \"),_c('li',[_vm._v(\"space-evenly - 在每个 grid item 之间设置均等宽度的空白间隙，包括外边缘\")])]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"align-content\")]),_vm._v(\": start | end | center | stretch | space-around | space-between | space-evenly;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"举例：\")]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"align-content\")]),_vm._v(\": start;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"https://cloud.hunger-valley.com/18-1-12/9095829.jpg\",\"alt\":\"Example of align-content set to start\"}})]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"align-content\")]),_vm._v(\": end;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"https://cloud.hunger-valley.com/18-1-12/15060507.jpg\",\"alt\":\"Example of align-content set to end\"}})]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"align-content\")]),_vm._v(\": center;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"https://cloud.hunger-valley.com/18-1-12/72396881.jpg\",\"alt\":\"Example of align-content set to center\"}})]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"align-content\")]),_vm._v(\": stretch;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"https://cloud.hunger-valley.com/18-1-12/46794685.jpg\",\"alt\":\"Example of align-content set to stretch\"}})]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"align-content\")]),_vm._v(\": space-around;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"https://cloud.hunger-valley.com/18-1-12/81192919.jpg\",\"alt\":\"Example of align-content set to space-around\"}})]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"align-content\")]),_vm._v(\": space-between;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"https://cloud.hunger-valley.com/18-1-12/27437729.jpg\",\"alt\":\"Example of align-content set to space-between\"}})]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"align-content\")]),_vm._v(\": space-evenly;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"https://cloud.hunger-valley.com/18-1-12/6825571.jpg\",\"alt\":\"Example of align-content set to space-evenly\"}})]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"grid-auto-columns--grid-auto-rows\"}},[_vm._v(\"grid-auto-columns / grid-auto-rows\")]),_vm._v(\" \"),_c('p',[_vm._v(\"指定自动生成的网格轨道（又名隐式网格轨道）的大小。 隐式网格轨道在你显式的定位超出指定网格范围的行或列（使用 grid-template-rows/grid-template-columns）时被创建。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"值：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('code',[_vm._v(\"<track-size>\")]),_vm._v(\" - 可以是一个长度值，一个百分比值，或者一个自由空间的一部分（使用 fr 单位）\")])]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-auto-columns\")]),_vm._v(\": <track-size> ...;\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-auto-rows\")]),_vm._v(\": <track-size> ...;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"为了说明如何创建隐式网格轨道，思考如下代码：\")]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-template-columns\")]),_vm._v(\": \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"60px\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"60px\")]),_vm._v(\";\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-template-rows\")]),_vm._v(\": \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"90px\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"90px\")]),_vm._v(\"\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"https://cloud.hunger-valley.com/18-1-12/90644000.jpg\",\"alt\":\"Example of 2 x 2 grid\"}})]),_vm._v(\" \"),_c('p',[_vm._v(\"这里创建了一个 2x2的网格。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"但是，现在想象一下，使用 grid-column 和 grid-row 来定位你的网格项目，如下所示：\")]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".item-a\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-column\")]),_vm._v(\": \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"1\")]),_vm._v(\" / \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"2\")]),_vm._v(\";\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-row\")]),_vm._v(\": \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"2\")]),_vm._v(\" / \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"3\")]),_vm._v(\";\\n}\\n\"),_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".item-b\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-column\")]),_vm._v(\": \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"5\")]),_vm._v(\" / \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"6\")]),_vm._v(\";\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-row\")]),_vm._v(\": \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"2\")]),_vm._v(\" / \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"3\")]),_vm._v(\";\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"https://cloud.hunger-valley.com/18-1-12/38445302.jpg\",\"alt\":\"Example of implicit tracks\"}})]),_vm._v(\" \"),_c('p',[_vm._v(\"这里我们指定 .item-b开始于列网格线 5 并结束于在列网格线 6，但我们并未定义列网格线 5 或 6。因为我们引用不存在的网格线，宽度为0的隐式轨道的就会被创建用与填补间隙。我们可以使用\\n        grid-auto-columns 和 grid-auto-rows属性来指定这些隐式轨道的宽度：\")]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-auto-columns\")]),_vm._v(\": \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"60px\")]),_vm._v(\";\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"https://cloud.hunger-valley.com/18-1-12/33573866.jpg\",\"alt\":\"Example of implicit tracks\"}})]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"grid-auto-flow\"}},[_vm._v(\"grid-auto-flow\")]),_vm._v(\" \"),_c('p',[_vm._v(\"如果你存在没有显示指明放置在网格上的 grid item，则自动放置算法会自动放置这些项目。 而该属性则用于控制自动布局算法的工作方式。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"值：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"row - 告诉自动布局算法依次填充每行，根据需要添加新行\")]),_vm._v(\" \"),_c('li',[_vm._v(\"column - 告诉自动布局算法依次填充每列，根据需要添加新列\")]),_vm._v(\" \"),_c('li',[_vm._v(\"dense - 告诉自动布局算法，如果后面出现较小的 grid item，则尝试在网格中填充空洞\")])]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-auto-flow\")]),_vm._v(\": row | column | row dense | column dense\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"需要注意的是，\"),_c('code',[_vm._v(\"dense\")]),_vm._v(\" 可能导致您的 grid item 乱序。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"举例， 考虑如下 HTML：\")]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-html\"},[_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"<\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"section\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-attr\"},[_vm._v(\"class\")]),_vm._v(\"=\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"container\\\"\")]),_vm._v(\">\")]),_vm._v(\"\\n  \"),_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"<\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"div\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-attr\"},[_vm._v(\"class\")]),_vm._v(\"=\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"item-a\\\"\")]),_vm._v(\">\")]),_vm._v(\"item-a\"),_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"</\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"div\")]),_vm._v(\">\")]),_vm._v(\"\\n  \"),_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"<\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"div\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-attr\"},[_vm._v(\"class\")]),_vm._v(\"=\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"item-b\\\"\")]),_vm._v(\">\")]),_vm._v(\"item-b\"),_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"</\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"div\")]),_vm._v(\">\")]),_vm._v(\"\\n  \"),_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"<\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"div\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-attr\"},[_vm._v(\"class\")]),_vm._v(\"=\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"item-c\\\"\")]),_vm._v(\">\")]),_vm._v(\"item-c\"),_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"</\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"div\")]),_vm._v(\">\")]),_vm._v(\"\\n  \"),_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"<\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"div\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-attr\"},[_vm._v(\"class\")]),_vm._v(\"=\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"item-d\\\"\")]),_vm._v(\">\")]),_vm._v(\"item-d\"),_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"</\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"div\")]),_vm._v(\">\")]),_vm._v(\"\\n  \"),_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"<\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"div\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-attr\"},[_vm._v(\"class\")]),_vm._v(\"=\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"item-e\\\"\")]),_vm._v(\">\")]),_vm._v(\"item-e\"),_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"</\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"div\")]),_vm._v(\">\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"</\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"section\")]),_vm._v(\">\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"你定义一个有5列和2行的网格，并将 grid-auto-flow 设置为 row（这也是默认值）：\")]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"display\")]),_vm._v(\": grid;\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-template-columns\")]),_vm._v(\": \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"60px\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"60px\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"60px\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"60px\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"60px\")]),_vm._v(\";\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-template-rows\")]),_vm._v(\": \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"30px\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"30px\")]),_vm._v(\";\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-auto-flow\")]),_vm._v(\": row;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"当把 grid item 放在网格上时，你只把其中两个设置了固定的位置：\")]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".item-a\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-column\")]),_vm._v(\": \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"1\")]),_vm._v(\";\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-row\")]),_vm._v(\": \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"1\")]),_vm._v(\" / \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"3\")]),_vm._v(\";\\n}\\n\"),_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".item-e\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-column\")]),_vm._v(\": \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"5\")]),_vm._v(\";\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-row\")]),_vm._v(\": \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"1\")]),_vm._v(\" / \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"3\")]),_vm._v(\";\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"因为我们将 grid-auto-flow 设置为row，所以我们的grid就像这样。 注意观察我们没有做设置的三个项目（item-b，item-c和item-d）是如何在剩余的行水平摆放位置的：\")]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"https://cloud.hunger-valley.com/18-1-12/92242678.jpg\",\"alt\":\"Example of grid-auto-flow set to row\"}})]),_vm._v(\" \"),_c('p',[_vm._v(\"如果我们将 grid-auto-flow 设置为 column，则 item-b，item-c 和 item-d 以列的顺序上下摆放：\")]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"display\")]),_vm._v(\": grid;\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-template-columns\")]),_vm._v(\": \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"60px\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"60px\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"60px\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"60px\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"60px\")]),_vm._v(\";\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-template-rows\")]),_vm._v(\": \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"30px\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"30px\")]),_vm._v(\";\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-auto-flow\")]),_vm._v(\": column;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"https://cloud.hunger-valley.com/18-1-12/55339887.jpg\",\"alt\":\"Example of grid-auto-flow set to column\"}})]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"grid\"}},[_vm._v(\"grid\")]),_vm._v(\" \"),_c('p',[_vm._v(\"\\n        在单个属性中设置所有以下属性的简写：grid-template-rows，grid-template-columns，grid-template-areas，grid-auto-rows，grid-auto-columns和grid-auto-flow。\\n        它同时也将 sets grid-column-gap 和 grid-row-gap 设置为它们的初始值，即使它们不能被此属性显示设置。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"值：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"none - 将所有子属性设置为其初始值\")]),_vm._v(\" \"),_c('li',[_c('code',[_vm._v(\"<grid-template-rows>\")]),_vm._v(\" / \"),_c('code',[_vm._v(\"<grid-template-columns>\")]),_vm._v(\" - 将 grid-template-rows\\n          和 grid-template-columns 分别设置为指定值，将所有其他子属性设置为其初始值\\n        \")]),_vm._v(\" \"),_c('li',[_c('code',[_vm._v(\"<grid-auto-flow>\")]),_vm._v(\" [\"),_c('code',[_vm._v(\"<grid-auto-rows>\")]),_vm._v(\" [ /\\n          \"),_c('code',[_vm._v(\"<grid-auto-columns>\")]),_vm._v(\"] ] - 接受所有与grid-auto-flow，grid-auto-rows和grid-auto-columns相同的值。\\n          如果省略grid-auto-columns，则将其设置为为grid-auto-rows指定的值。 如果两者都被省略，则它们被设置为它们的初始值\\n        \")])]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n    \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid\")]),_vm._v(\": none | <grid-template-rows> / <grid-template-columns> | <grid-auto-flow> [<grid-auto-rows> [/ <grid-auto-columns>]];\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"举例：\")]),_vm._v(\" \"),_c('p',[_vm._v(\"以下代码写法等价\")]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid\")]),_vm._v(\": \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"200px\")]),_vm._v(\" auto / \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"1\")]),_vm._v(\"fr auto \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"1\")]),_vm._v(\"fr;\\n}\\n\"),_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-template-rows\")]),_vm._v(\": \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"200px\")]),_vm._v(\" auto;\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-template-columns\")]),_vm._v(\": \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"1\")]),_vm._v(\"fr auto \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"1\")]),_vm._v(\"fr;\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-template-areas\")]),_vm._v(\": none;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"以下代码写法等价\")]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid\")]),_vm._v(\": column \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"1\")]),_vm._v(\"fr / auto;\\n}\\n\"),_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-auto-flow\")]),_vm._v(\": column;\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-auto-rows\")]),_vm._v(\": \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"1\")]),_vm._v(\"fr;\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-auto-columns\")]),_vm._v(\": auto;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"它也可用使用一个更复杂但相当方便的语法来一次设置所有内容。 你可以指定 grid-template-areas、grid-template-rows 以及\\n        grid-template-columns，并将所有其他子属性设置为其初始值。 你现在所做的是在其网格区域内，指定网格线名称和内联轨道大小。 可以看下面的例子：\")]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid\")]),_vm._v(\": [row1-start] \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"header header header\\\"\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"1\")]),_vm._v(\"fr [row1-end]\\n        [row2-start] \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"footer footer footer\\\"\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"25px\")]),_vm._v(\" [row2-end]\\n        / auto \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"50px\")]),_vm._v(\" auto;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"上述代码等价于\")]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".container\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-template-areas\")]),_vm._v(\":\\n    \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"header header header\\\"\")]),_vm._v(\"\\n    \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"footer footer footer\\\"\")]),_vm._v(\";\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-template-rows\")]),_vm._v(\": [row1-start] \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"1\")]),_vm._v(\"fr [row1-end row2-start] \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"25px\")]),_vm._v(\" [row2-end];\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-template-columns\")]),_vm._v(\": auto \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"50px\")]),_vm._v(\" auto;\\n}\\n\")])]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"孩子grid-items的属性\"}},[_vm._v(\"孩子(Grid Items)的属性\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"grid-column-start--grid-column-end--grid-row-start-grid-row-end\"}},[_vm._v(\"grid-column-start / grid-column-end /\\n        grid-row-start /grid-row-end\")]),_vm._v(\" \"),_c('p',[_vm._v(\"使用特定的网格线确定 grid item 在网格内的位置。grid-column-start/grid-row-start 属性表示grid\\n        item的网格线的起始位置，grid-column-end/grid-row-end属性表示网格项的网格线的终止位置。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"值：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('code',[_vm._v(\"<line>\")]),_vm._v(\": 可以是一个数字来指代相应编号的网格线，也可使用名称指代相应命名的网格线\")]),_vm._v(\" \"),_c('li',[_c('code',[_vm._v(\"span <number>\")]),_vm._v(\": 网格项将跨越指定数量的网格轨道\")]),_vm._v(\" \"),_c('li',[_c('code',[_vm._v(\"span <name>\")]),_vm._v(\": 网格项将跨越一些轨道，直到碰到指定命名的网格线\")]),_vm._v(\" \"),_c('li',[_vm._v(\"auto: 自动布局， 或者自动跨越， 或者跨越一个默认的轨道\")])]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".item\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-column-start\")]),_vm._v(\": <number> | <name> | span <number> | span <name> | auto\\n  grid-column-end: <number> | <name> | span <number> | span <name> | auto\\n  grid-row-start: <number> | <name> | span <number> | span <name> | auto\\n  grid-row-end: <number> | <name> | span <number> | span <name> | auto\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"举例：\")]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".item-a\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-column-start\")]),_vm._v(\": \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"2\")]),_vm._v(\";\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-column-end\")]),_vm._v(\": five;\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-row-start\")]),_vm._v(\": row1-start\\n  grid-row-end: \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"3\")]),_vm._v(\"\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"https://cloud.hunger-valley.com/18-1-12/8301648.jpg\",\"alt\":\"Example of grid-row/column-start/end\"}})]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".item-b\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-column-start\")]),_vm._v(\": \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"1\")]),_vm._v(\";\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-column-end\")]),_vm._v(\": span col4-start;\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-row-start\")]),_vm._v(\": \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"2\")]),_vm._v(\"\\n  grid-row-end: span \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"2\")]),_vm._v(\"\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"https://cloud.hunger-valley.com/18-1-12/35742447.jpg\",\"alt\":\"Example of grid-row/column-start/end\"}})]),_vm._v(\" \"),_c('p',[_vm._v(\"如果没有声明 grid-column-end / grid-row-end，默认情况下，该网格项将跨越1个轨道。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"网格项可以相互重叠。 您可以使用z-index来控制它们的堆叠顺序。\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"grid-column--grid-row\"}},[_vm._v(\"grid-column / grid-row\")]),_vm._v(\" \"),_c('p',[_vm._v(\"grid-column-start + grid-column-end, 和 grid-row-start + grid-row-end 的简写形式。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"值：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('code',[_vm._v(\"<start-line>\")]),_vm._v(\" / \"),_c('code',[_vm._v(\"<end-line>\")]),_vm._v(\" - 每个值的用法都和属性分开写时的用法一样\")])]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".item\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-column\")]),_vm._v(\": <start-line> / <end-line> | <start-line> / span <value>;\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-row\")]),_vm._v(\": <start-line> / <end-line> | <start-line> / span <value>;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"举例：\")]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".item-c\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-column\")]),_vm._v(\": \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"3\")]),_vm._v(\" / span \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"2\")]),_vm._v(\";\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-row\")]),_vm._v(\": third-line / \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"4\")]),_vm._v(\";\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"https://cloud.hunger-valley.com/18-1-12/95036015.jpg\",\"alt\":\"Example of grid-column/grid-row\"}})]),_vm._v(\" \"),_c('p',[_vm._v(\"如果没有指定结束行值，则该网格项默认跨越1个轨道。\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"grid-area\"}},[_vm._v(\"grid-area\")]),_vm._v(\" \"),_c('p',[_vm._v(\"给 grid item 进行命名以便于使用 grid-template-areas 属性创建模板时来进行引用。另外也可以做为 grid-row-start + grid-column-start +\\n        grid-row-end + grid-column-end 的简写形式。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"值：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('code',[_vm._v(\"<name>\")]),_vm._v(\" - 你的命名\")]),_vm._v(\" \"),_c('li',[_c('code',[_vm._v(\"<row-start>\")]),_vm._v(\" / \"),_c('code',[_vm._v(\"<column-start>\")]),_vm._v(\" / \"),_c('code',[_vm._v(\"<row-end>\")]),_vm._v(\" / \"),_c('code',[_vm._v(\"<column-end>\")]),_vm._v(\"\\n          - 可以是数字，也可以是网格线的名字\\n        \")])]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".item\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-area\")]),_vm._v(\": <name> | <row-start> / <column-start> / <row-end> / <column-end>;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"举例:\")]),_vm._v(\" \"),_c('p',[_vm._v(\"给一个网格项命名\")]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".item-d\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-area\")]),_vm._v(\": header\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"作为 grid-row-start + grid-column-start + grid-row-end + grid-column-end 的简写:\")]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".item-d\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"grid-area\")]),_vm._v(\": \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"1\")]),_vm._v(\" / col4-start / last-line / \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"6\")]),_vm._v(\"\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"https://cloud.hunger-valley.com/18-1-12/37070111.jpg\",\"alt\":\"Example of grid-area\"}})]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"justify-self\"}},[_vm._v(\"justify-self\")]),_vm._v(\" \"),_c('p',[_vm._v(\"沿着行轴对齐grid item 里的内容（与之对应的是 align-self, 即沿列轴对齐）。 此属性对单个网格项内的内容生效。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"值：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"start - 将内容对齐到网格区域的左端\")]),_vm._v(\" \"),_c('li',[_vm._v(\"end - 将内容对齐到网格区域的右端\")]),_vm._v(\" \"),_c('li',[_vm._v(\"center - 将内容对齐到网格区域的中间\")]),_vm._v(\" \"),_c('li',[_vm._v(\"stretch - 填充网格区域的宽度 (这是默认值)\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"举例：\")]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".item-a\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"justify-self\")]),_vm._v(\": start;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"https://cloud.hunger-valley.com/18-1-12/53670315.jpg\",\"alt\":\"Example of justify-self set to start\"}})]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".item-a\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"justify-self\")]),_vm._v(\": end;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"https://cloud.hunger-valley.com/18-1-12/15608697.jpg\",\"alt\":\"Example of justify-self set to end\"}})]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".item-a\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"justify-self\")]),_vm._v(\": center;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"https://cloud.hunger-valley.com/18-1-12/42777942.jpg\",\"alt\":\"Example of justify-self set to center\"}})]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".item-a\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"justify-self\")]),_vm._v(\": stretch;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"https://cloud.hunger-valley.com/18-1-12/42754838.jpg\",\"alt\":\"Example of justify-self set to stretch\"}})]),_vm._v(\" \"),_c('p',[_vm._v(\"要为网格中的所有grid items 设置对齐方式，也可以通过 justify-items 属性在网格容器上设置此行为。\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"align-self\"}},[_vm._v(\"align-self\")]),_vm._v(\" \"),_c('p',[_vm._v(\"沿着列轴对齐grid item 里的内容（与之对应的是 justify-self, 即沿行轴对齐）。 此属性对单个网格项内的内容生效。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"值：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"start - 将内容对齐到网格区域的顶部\")]),_vm._v(\" \"),_c('li',[_vm._v(\"end - 将内容对齐到网格区域的底部\")]),_vm._v(\" \"),_c('li',[_vm._v(\"center - 将内容对齐到网格区域的中间\")]),_vm._v(\" \"),_c('li',[_vm._v(\"stretch - 填充网格区域的高度 (这是默认值)\")])]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".item\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"align-self\")]),_vm._v(\": start | end | center | stretch;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"举例:\")]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".item-a\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"align-self\")]),_vm._v(\": start;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"https://cloud.hunger-valley.com/18-1-12/67517511.jpg\",\"alt\":\"Example of align-self set to start\"}})]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".item-a\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"align-self\")]),_vm._v(\": end;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"https://cloud.hunger-valley.com/18-1-12/9140938.jpg\",\"alt\":\"Example of align-self set to end\"}})]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".item-a\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"align-self\")]),_vm._v(\": center;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"https://cloud.hunger-valley.com/18-1-12/38240821.jpg\",\"alt\":\"Example of align-self set to center\"}})]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"lang-css\"},[_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".item-a\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"align-self\")]),_vm._v(\": stretch;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"https://cloud.hunger-valley.com/18-1-12/84502177.jpg\",\"alt\":\"Example of align-self set to stretch\"}})]),_vm._v(\" \"),_c('p',[_vm._v(\"要为网格中的所有grid items 统一设置对齐方式，也可以通过 align-items 属性在网格容器上设置此行为。\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-3828942f\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/Detail/template.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-3828942f\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./template.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./template.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./template.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-3828942f\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./template.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/Detail/template.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}